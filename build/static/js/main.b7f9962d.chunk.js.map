{"version":3,"sources":["components/TableDataSlice.js","components/helper.js","components/TableRest.js","components/DropdownHTML.js","components/TableAccordion.js","pages/SessionIdSlice.js","components/TableData.js","pages/Subjek.js","pages/SesiSemester.js","components/Footer.js","pages/SignInUpSlice.js","components/DrawerObject.js","pages/SignInUp.js","components/Timetable.js","pages/StudentTimeTable.js","pages/Kurikulum.js","pages/KurikulumElektif.js","pages/Ruang.js","components/Info.js","pages/Profile.js","pages/SubjekSeksyen.js","pages/RuangTimetable.js","pages/KurikulumSubjek.js","pages/SubjekPensyarah.js","pages/SubjekPelajar.js","pages/Pensyarah.js","pages/Pelajar.js","pages/PensyarahSubjek.js","pages/PelajarSubjek.js","components/GraphComponents.js","pages/AdminProfile.js","pages/NotFound.js","App.js","app/store.js","registerServiceWorker.js","index.js","resources/UTM_Gate.jpg"],"names":["localStorageSesiSemester","localStorage","getItem","sesi","semester","undefined","date","Date","year","getFullYear","month","getMonth","JSON","parse","slice","createSlice","name","initialState","sesiSemesterValues","limitValues","offsetValues","lengthToShowValues","sesiMasukValues","sesi_masuk","kodRuangValues","kodRuang","idKurikulumValues","idKurikulumSubjekValues","subjekPelajarValues","kodSubjek","seksyen","subjekPensyarahValues","reducers","setSesiSemester","state","action","payload","setLengthToShow","setLimit","setOffset","setSesiMasuk","setKodRuang","setIdKurikulum","setIdKurikulumSubjek","setSubjekPelajar","setSubjekPensyarah","actions","selectSesiSemester","sesiSemester","selectOffset","selectLimit","selectSesiMasuk","selectKodRuang","selectIdKurikulum","selectIdKurikulumSubjek","selectSubjekPelajar","selectSubjekPensyarah","generateLocalStorageName","obj","localStorageName","argNum","entity","args","value","getLengthToShow","lengthToShow","setItem","TableRest","entityInfo","jsonArray","tableNum","willActionOccur","startOffSet","dispatch","useDispatch","history","useHistory","map","index","arrayColumns","forEach","val","TableBody","key","style","minWidth","TableRow","idx","TableCell","align","Button","size","variant","onClick","event","handleChange","jsonObject","push","Typography","fontSize","DropdownHTML","willTitleOccur","useSelector","stringValue","location","useLocation","useEffect","document","querySelector","className","component","color","replace","w","c","toUpperCase","FormControl","Select","native","onChange","optionValue","target","substring","pathname","str","arrayDropdownColumns","TableAccordion","classes","makeStyles","theme","root","width","borderBottom","root2","margin","heading","typography","pxToRem","fontWeight","fontWeightRegular","insideAccordion","useStyles","handleClick","isExpandMore","element","sibling","idDisplayElement","idIconExpandMore","idIconExpandLess","displayElement","getElementById","classList","toggle","TableContainer","Paper","marginBottom","Table","aria-label","TableHead","backgroundColor","indexJsonArray","id","colSpan","paddingBottom","paddingTop","Collapse","in","timeout","unmountOnExit","Divider","gutterBottom","valueObject","indexValueObject","handlePelajar","kod_subjek","handlePensyarah","setAdminSessionId","createAsyncThunk","a","password","fetch","data","json","sessionIdSlice","fetchFirstTime","adminSessionId","setFetchFirstTime","setAdminSessionIdSync","extraReducers","fulfilled","selectAdminSessionId","sessionId","selectFetchFirstTime","TableData","isTable","isAccordion","isDropDown","useState","setJsonArray","sortHandleChild","stringIndex","parseInt","row","fetchFromLocalStorage","stringify","clickedColumn","querySelectorAll","sortAsc","nextElementSibling","sortDesc","boolAscend","textContent","trim","isNaN","sort","b","nameA","toLowerCase","nameB","sortByKey","startOffset","setStartOffset","length","numberOfPagination","Math","ceil","indexPagination","count","displayPages","number","console","log","mounted","url","body1","body2","generateURL","then","catch","err","findIndex","selectValue","Subjek","entity1","arrletayOtherColumns","arraySelectIds","entity2","SesiSemester","Footer","padding","Link","href","local_auth_user","getAuthDetails","loginName","login_name","fullName","full_name","description","session_id","getProfession","local_password","loginNameLength","Object","is","passwordLength","authUserValues","profession","setAuthUser","selectAuthUser","authUser","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","textAlign","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","background","drawerHeader","backgroundImage","content","flexGrow","contentShift","NavItem","text","icon","to","ListItem","button","ListItemIcon","Icon","ListItemText","PersistentDrawerLeft","professionString","children","useTheme","React","open","setOpen","checkedA","setState","nonAdminLinks1","finalLinks1","finalLinks2","CssBaseline","AppBar","clsx","Toolbar","toolbarTitle","Drawer","anchor","paper","IconButton","direction","List","dense","disablePadding","Switch","checked","removeItem","window","inputProps","Grid","container","item","md","xs","sm","bgPaper","height","bg","UTMGate","backgroundBlendMode","backgroundRepeat","backgroundSize","flexDirection","alignItems","avatar","palette","secondary","main","form","marginTop","submit","SignInUp","actionIsSignIn","failedLogin","setFailedLogin","username","setUserName","setPassword","body","response","ok","contentType","headers","get","indexOf","auth_user","loginAdmin","auth_user_object","auth_admin","reloacte","inputUserName","useRef","inputUserPassword","user","setUser","Container","maxWidth","Box","Avatar","InputLabel","labelId","label","currentUser","MenuItem","noValidate","TextField","required","fullWidth","autoComplete","autoFocus","ref","type","Chip","shadow","evt","preventDefault","login","alert","mt","generateScheduleData","newArray","i","j","useStylesCells","useStylesUglyCells","GenerateTimetable","scheduleData","isRuangUglyTimetable","startIndex","endIndex","newTimeState","time","timeString","generateTimeState","newDayState","split","uglyDesign","okayDesign","classesCell","rowIndex","column","columnIndex","stringToAbbrev","match","join","stringAbbrv","TimeTable","userInfo","ruangInfo","isBelowMD960","useMediaQuery","query","isAboveMD960","entityData","setEntityData","setScheduleData","currentIndex","setCurrentIndex","anchorEl","setAnchorEl","changeSesiSemester","entityDataObj","subjek","produce","newScheduleData","indexHari","indexMasa","ruang","newEntityDataObjek","newSesiSemester","newSesi","newSemester","string","object","justify","aria-controls","aria-haspopup","currentTarget","keepMounted","Boolean","onClose","Kurikulum","arrayOtherColumns","KurikulumSubjek","id_kurikulum_subjek","setId_kurikulum_subjek","Ruang","smallText","UserInfo","entries","property","objectValue","Profile","isAdmin","entityStudent","entityTeacher","SubjekSeksyen","accordionColumns","RuangTimetable","KurikulumElektif","id_kurikulum","SubjekPensyarah","SubjekPelajar","Pensyarah","Pelajar","limit","setLimit2","offset","setOffset2","Input","inputValue","PensyarahSubjek","no_pekerja","setNo_pekerja","PelajarSubjek","no_matrik","setNo_matrik","GraphComponents","xAxis","yAxis","dataLoadingStatus","chartData","didMount","chartType","options","title","chartArea","top","hAxis","minValue","vAxis","rootProps","AdminGraph","graphType","AdminProfile","willShowFirst","setWillShowFirst","willShowSecond","setWillShowSecond","willShowThird","setWillShowThird","NotFound","createMuiTheme","primary","blue","red","contrastThreshold","tonalOffset","h3","breakpoints","up","h2","App","handleSession","ThemeProvider","exact","path","StudentTimeTable","configureStore","reducer","isLocalhost","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","store","URL","process","origin","addEventListener","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.b7f9962d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nlet localStorageSesiSemester = localStorage.getItem(\"sesiSemesterValues\");\nlet sesi = \"\", semester = \"\";\nif (localStorageSesiSemester === \"\" || localStorageSesiSemester === null || localStorageSesiSemester === undefined) {\n  let date = new Date();\n  let year = date.getFullYear();\n  let month = date.getMonth();\n  sesi = ((month >= 7) || (month <= 2)) ? `${year - 1}/${year}` : `${year}/${year + 1}`;\n  semester = ((month >= 7) || (month <= 2)) ? 1 : 2;\n}\nelse {\n  ({ sesi, semester } = JSON.parse(localStorageSesiSemester));\n}\n\nexport const slice = createSlice({\n  name: 'sesiSemester',\n  // A slice is a combination of reducers\n  // Slice's name is sesiSemester slice and state can be accessed by state.sesiSemester\n  // state has 2 objects: state.sesiSemesterValues\n\n  // Creates state also by initialState\n\n  // Actions:\n  // Action has type and payload\n  // action type is \"[sliceName]/[reducerPropertyName]\"\n\n  initialState: {\n    sesiSemesterValues: {\n      // slice's sesiSemesterValues.[state1] accessed by slice.[state1] later to export the state. It's an object for conciseness\n      sesi,\n      semester\n    },\n    limitValues: 25,\n    offsetValues: 1,\n    lengthToShowValues: 10,\n    sesiMasukValues: {\n      // slice's sesiSemesterValues.[state2] accessed by slice.[state2] later to export the state. It's an object for conciseness\n      sesi_masuk: \"2017/2018\"\n    },\n    kodRuangValues: {\n      // slice's sesiSemesterValues.[state3] accessed by slice.[state3] later to export the state. It's an object for conciseness\n      kodRuang: \"N28-105-01\"\n    },\n    idKurikulumValues: \"4\",\n    idKurikulumSubjekValues: \"87\",\n    subjekPelajarValues: {\n      kodSubjek: \"SCSI1013\", seksyen: \"01\"\n    },\n    subjekPensyarahValues: {\n      kodSubjek: \"SCSI1013\", seksyen: \"01\"\n    }\n  },\n\n  reducers: {\n    // Although it's written as reducers, it's better called action\n    // [action1] exported as slice.actions.[action1]\n    // ...action.payload (payload is the parameter sent) :       \n    // Example in this slice file:      state.sesiSemesterValues = { ...action.payload };\n    // Example in actual js file:       setSesiSemester({sesi: \"20118/2019\", semester: 1})\n    // What it does in the reducer:     state.sesiSemesterValues= {sesi: \"20118/2019\", semester: 1}\n\n    setSesiSemester: (state, action) => {\n      // Will handle the action type `'sesiSemester/setSesiSemester'`\n      state.sesiSemesterValues = { ...action.payload };\n    },\n    setLengthToShow: (state, action) =>{\n      state.lengthToShowValues = action.payload ;\n    },\n    setLimit: (state, {payload}) =>{\n      state.limitValues = payload ;\n    },\n    setOffset: (state, {payload}) =>{\n      state.offsetValues = payload ;\n    },\n    // [action2] exported as slice.actions.[action2]\n    setSesiMasuk: (state, action) => {\n      // Will handle the action type `'sesiSemester/setSesiMasuk'`\n      state.sesiMasukValues = { ...action.payload };\n    },\n    // [action3] exported as slice.actions.[action3]\n    setKodRuang: (state, action) => {\n      // Will handle the action type `'sesiSemester/setKodRuang'`\n      state.kodRuangValues = { ...action.payload };\n    },\n    setIdKurikulum: (state, action) => {\n      // Will handle the action type `'sesiSemester/setSubjekPensyarah'`\n      state.idKurikulumValues = action.payload;\n    },\n    setIdKurikulumSubjek: (state, action) => {\n      // Will handle the action type `'sesiSemester/setSubjekPensyarah'`\n      state.idKurikulumSubjekValues = action.payload;\n    },\n    setSubjekPelajar: (state, action) => {\n      // Will handle the action type `'sesiSemester/setSubjekPelajar'`\n      state.subjekPelajarValues = { ...action.payload };\n    },\n    setSubjekPensyarah: (state, action) => {\n      // Will handle the action type `'sesiSemester/setSubjekPensyarah'`\n      state.subjekPensyarahValues = { ...action.payload };\n    },\n\n  },\n});\n// exporting the actions. Later imported as useDispatch([actionName]) ?? 95% SURE\nexport const { setSesiSemester } = slice.actions;\nexport const { setSesiMasuk } = slice.actions;\nexport const { setKodRuang } = slice.actions;\nexport const { setIdKurikulum } = slice.actions;\nexport const { setIdKurikulumSubjek } = slice.actions;\nexport const { setSubjekPelajar } = slice.actions;\nexport const { setSubjekPensyarah } = slice.actions;\nexport const { setLengthToShow } = slice.actions;\nexport const { setLimit } = slice.actions;\nexport const { setOffset } = slice.actions;\n\n// exporting the states. Later imported as useSelector([stateName])  ?? 95% SURE\nexport const selectSesiSemester = state => { return state.sesiSemester.sesiSemesterValues };\nexport const selectLengthToShow = state => { return state.sesiSemester.lengthToShowValues };\nexport const selectOffset = state => { return state.sesiSemester.offsetValues };\nexport const selectLimit = state => { return state.sesiSemester.limitValues };\nexport const selectSesiMasuk = state => { return state.sesiSemester.sesiMasukValues };\nexport const selectKodRuang = state => { return state.sesiSemester.kodRuangValues };\nexport const selectIdKurikulum = state => { return state.sesiSemester.idKurikulumValues };\nexport const selectIdKurikulumSubjek = state => { return state.sesiSemester.idKurikulumSubjekValues };\nexport const selectSubjekPelajar = state => { return state.sesiSemester.subjekPelajarValues };\nexport const selectSubjekPensyarah = state => { return state.sesiSemester.subjekPensyarahValues };\n\n// exporting the slice (combination of reducers, so more apt name should be slice.slice???) for combination in the store\nexport default slice.reducer;\n","export function generateLocalStorageName(obj) {\n    let localStorageName = \"\";\n    if (obj.argNum === 0) {\n        localStorageName = `${obj.entity}`;\n    }\n    else if (obj.argNum === 1) {\n        localStorageName = `${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n    }\n    else if (obj.argNum === 2) {\n        localStorageName = `${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n        localStorageName = `${localStorageName}&${obj.args[1].name}=${obj.args[1].value}`;\n    } \n    else if (obj.argNum === 3) {\n        localStorageName = `${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n        localStorageName = `${localStorageName}&${obj.args[1].name}=${obj.args[1].value}`\n        localStorageName = `${localStorageName}&${obj.args[2].name}=${obj.args[2].value}`;\n    }\n    else if (obj.argNum === 4) {\n        localStorageName = `${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n        localStorageName = `${localStorageName}&${obj.args[1].name}=${obj.args[1].value}`\n        localStorageName = `${localStorageName}&${obj.args[2].name}=${obj.args[2].value}`\n        localStorageName = `${localStorageName}&${obj.args[3].name}=${obj.args[3].value}`;\n    }\n    else if (obj.argNum === 5) {\n        localStorageName = `${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n        localStorageName = `${localStorageName}&${obj.args[1].name}=${obj.args[1].value}`\n        localStorageName = `${localStorageName}&${obj.args[2].name}=${obj.args[2].value}`\n        localStorageName = `${localStorageName}&${obj.args[3].name}=${obj.args[3].value}`;\n        localStorageName = `${localStorageName}&${obj.args[4].name}=${obj.args[4].value}`;\n    }\n\n    return localStorageName;\n}\nexport function generateURL(obj) {\n    let url = \"\";\n    if (obj.argNum === 0) {\n        url = `${obj.url}?entity=${obj.entity}`;\n    }\n    if (obj.argNum === 1) {\n        let body1 = `?entity=${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n        url = `${obj.url}${body1}`;\n    }\n    if (obj.argNum === 2) {\n        let body2 = `?entity=${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n        body2 = `${body2}&${obj.args[1].name}=${obj.args[1].value}`;\n        url = `${obj.url}${body2}`;\n    }\n    if (obj.argNum === 3) {\n        let body2 = `?entity=${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n        body2 = `${body2}&${obj.args[1].name}=${obj.args[1].value}`;\n        body2 = `${body2}&${obj.args[2].name}=${obj.args[2].value}`;\n        url = `${obj.url}${body2}`;\n    }\n    if (obj.argNum === 4) {\n        let body2 = `?entity=${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n        body2 = `${body2}&${obj.args[1].name}=${obj.args[1].value}`;\n        body2 = `${body2}&${obj.args[2].name}=${obj.args[2].value}`;\n        body2 = `${body2}&${obj.args[3].name}=${obj.args[3].value}`;\n        url = `${obj.url}${body2}`;\n    }\n    if (obj.argNum === 5) {\n        let body2 = `?entity=${obj.entity}&${obj.args[0].name}=${obj.args[0].value}`;\n        body2 = `${body2}&${obj.args[1].name}=${obj.args[1].value}`;\n        body2 = `${body2}&${obj.args[2].name}=${obj.args[2].value}`;\n        body2 = `${body2}&${obj.args[3].name}=${obj.args[3].value}`;\n        body2 = `${body2}&${obj.args[4].name}=${obj.args[4].value}`;\n        url = `${obj.url}${body2}`;\n    }\n    return url;\n}\n\nexport function sortByKey(index, obj, jsonArray, tableNum) {\n\n    let localStorageName = generateLocalStorageName(obj);\n    index = parseInt(index);\n    let fetchFromLocalStorage = JSON.parse(localStorage.getItem(localStorageName));\n    let key = obj.arrayColumns[index];\n    let row;\n    try{\n        row = fetchFromLocalStorage[0][key];\n    }\n    // console.log({fetchFromLocalStorage, length: fetchFromLocalStorage.length})\n    catch\n    {\n        localStorage.setItem(localStorageName, JSON.stringify(jsonArray));\n        fetchFromLocalStorage = JSON.parse(localStorage.getItem(localStorageName));\n\n        row = fetchFromLocalStorage[0][key];\n\n    }\n    let clickedColumn = document.querySelectorAll(`span.sortIndicator`)[index];\n    let sortAsc = clickedColumn.nextElementSibling;\n    let sortDesc = sortAsc.nextElementSibling;\n    sortAsc.classList.toggle(\"none\");\n    sortDesc.classList.toggle(\"none\");\n    let boolAscend = 1;\n    // console.log(clickedColumn);\n    if (clickedColumn.textContent.trim() !== \"+\") {\n        boolAscend = -1;\n    }\n    else {\n        boolAscend = 1;\n    }\n  \n\n    let isNotNumber = isNaN(row);\n    if (isNotNumber) {\n        fetchFromLocalStorage.sort(function (a, b) {\n            let nameA = a[obj.arrayColumns[index]].toLowerCase(), nameB = b[obj.arrayColumns[index]].toLowerCase();\n            if (nameA < nameB) //sort string ascending\n                return -1 * boolAscend;\n            if (nameA > nameB)\n                return 1 * boolAscend;\n            return 0; //default return value (no sorting)\n        })\n    }\n    else {\n        fetchFromLocalStorage.sort(function (a, b) {\n            return (a[obj.arrayColumns[index]] - b[obj.arrayColumns[index]]) * boolAscend;\n        })\n    }\n    jsonArray = [...fetchFromLocalStorage];\n    if (boolAscend === -1) {\n        clickedColumn.textContent = \"+\";\n    }\n    else {\n        clickedColumn.textContent = \"-\";\n    }\n\n    return jsonArray;\n}\n\nexport function trimData(jsonArray, lengthToShow) {\n\n    if (lengthToShow !== -1) {\n        let totalLength = jsonArray.length;\n        if (totalLength !== lengthToShow) {\n            jsonArray.splice(lengthToShow, totalLength - lengthToShow);\n        }\n    }\n}\n\nexport function getCurrentSesi() {\n    let sesiString = \"\";\n    let date = new Date();\n    let year = date.getFullYear();\n    if (date.getMonth > 6) {\n        sesiString = `${year}/${year + 1}`;\n    }\n    else {\n        sesiString = `${year - 1}/${year}`;\n    }\n    return sesiString;\n}\n\nexport function getLengthToShow(){\n    let lengthToShow= localStorage.getItem(\"lengthToShow\");\n    if (lengthToShow===undefined || lengthToShow===null) {\n        localStorage.setItem('lengthToShow', \"10\");\n        return \"10\";\n    }\n    else{\n        return lengthToShow;\n    }\n}","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useDispatch } from 'react-redux';\nimport { setSesiSemester, setKodRuang, setIdKurikulum, setIdKurikulumSubjek } from './TableDataSlice';\nimport { Button, Typography } from '@material-ui/core';\n\nfunction TableRest({ entityInfo, jsonArray, tableNum, willActionOccur = false, startOffSet, lengthToShow }) {\n    /*\n        Lift state up if n\n        Props are Read-Only\n        let sortHandleChild = (stringIndex)=>{\n            jsonArray= sortByKey(stringIndex, entityInfo, jsonArray, tableNum);\n        };\n    */\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    let handleChange = (event, jsonObject) => {\n        if (entityInfo.entity === \"sesisemester\") {\n            dispatch(setSesiSemester({ sesi: jsonObject['sesi'], semester: jsonObject['semester'] }));\n            history.push('/subjek');\n        }\n\n        else if (entityInfo.entity === \"ruang\") {\n            dispatch(setKodRuang({ kodRuang: jsonObject['kod_ruang'] }));     // dispatch(setSesiMasuk({ sesi_masuk }));\n            // console.log(jsonObject['kod_ruang'])\n            history.push('/ruang_timetable');\n        }\n\n        // kurikulum-->id_kurikulum \n        // gives next page=>\n        // kurikulum_subjek-->id_kurikulum_subjek\n        // gives next page=>\n        // kurikulum_subjek_elektif\n\n        else if (entityInfo.entity === \"kurikulum\") {\n            // console.log({ jsonObject, obj: jsonObject['id_kurikulum'] })\n            dispatch(setIdKurikulum(jsonObject['id_kurikulum']));     // dispatch(setSesiMasuk({ sesi_masuk }));\n            history.push('/kurikulum_subjek');\n        }\n\n        else if (entityInfo.entity === \"kurikulum_subjek\") {\n            // console.log({ jsonObject, obj: jsonObject['id_kurikulum_subjek'] })\n            dispatch(setIdKurikulumSubjek(jsonObject['id_kurikulum_subjek']));     // dispatch(setSesiMasuk({ sesi_masuk }));\n            history.push('/kurikulum_elektif');\n        }\n\n    }\n    // console.log({ startOffSet, end: startOffSet + lengthToShow, lengthToShow })\n\n    if (entityInfo.entity === \"pelajar\") {\n        \n        return (\n            <>  \n                {jsonArray.map((value, index) => {\n                    if (value === null) {\n                        value = {};\n                        entityInfo.arrayColumns.forEach((val) => {\n                            value[val] = \"None\";\n                        });\n                    }\n                  \n                    return (\n                        <TableBody key={index} style={{ minWidth: \"100%\" }}>\n                            <TableRow>\n                                {entityInfo.arrayColumns.map((val, idx) => {\n                                    return (\n                                        <TableCell align=\"center\" key={`${tableNum}${index}${idx}`} >{value[val]}</TableCell>\n                                    )\n                                })}\n                            </TableRow>\n                        </TableBody>\n                    )\n                  \n                }\n                )}\n            </>\n        )\n    }\n\n    if (!willActionOccur) {\n        return (\n            <>\n                {jsonArray.map((value, index) => {\n                    if (value === null) {\n                        value = {};\n                        entityInfo.arrayColumns.forEach((val) => {\n                            value[val] = \"None\";\n                        });\n                    }\n                    if ((index >= startOffSet) && (index < (startOffSet + lengthToShow))) {\n                        return (\n                            <TableBody key={index} style={{ minWidth: \"100%\" }}>\n                                <TableRow>\n                                    {entityInfo.arrayColumns.map((val, idx) => {\n                                        return (\n                                            <TableCell align=\"center\" key={`${tableNum}${index}${idx}`} >{value[val]}</TableCell>\n                                        )\n                                    })}\n                                </TableRow>\n                            </TableBody>\n                        )\n                    }\n                    else {\n                        return null;\n                    }\n                })}\n            </>\n        )\n    }\n    else if (willActionOccur) {\n        return (\n            <>\n                {jsonArray.map((value, index) => {\n                    if (value === null) {\n                        value = {};\n                        entityInfo.arrayColumns.forEach((val) => {\n                            value[val] = \"None\";\n                        });\n                    }\n                    if ((index >= startOffSet) && (index < (startOffSet + lengthToShow))) {\n\n                        return (\n                            <TableBody key={index} style={{ minWidth: \"100%\" }}>\n                                <TableRow>\n                                    {entityInfo.arrayColumns.map((val, idx) => {\n                                        return (\n                                            <TableCell align=\"center\" key={`${tableNum}${index}${idx}`} >{value[val]}</TableCell>\n                                        )\n                                    })\n                                    }\n                                    <TableCell align=\"center\">\n                                        <Button size=\"small\" variant=\"outlined\" key={`buttonNew${tableNum}${index}`} onClick={(event) => handleChange(event, jsonArray[index])}>\n                                            <Typography style={{ fontSize: 12 }}> Click </Typography>\n                                        </Button>\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        )\n                    }\n                    else {\n                        return null;\n                    }\n                })}\n            </>\n        )\n    }\n    else {\n        return (\n            <>\n            </>\n        )\n    }\n}\n\n\nexport default TableRest\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setSesiSemester, setSesiMasuk, selectSesiSemester } from './TableDataSlice';\nimport React, { Fragment, useEffect } from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { useLocation, useHistory } from 'react-router-dom';\n\n\nfunction DropdownHTML({ entityInfo, jsonArray, willTitleOccur=true }) {\n    \n    const dispatch = useDispatch();\n    let {sesi, semester} = useSelector(selectSesiSemester);\n    let stringValue = `sesi ${sesi} semester ${semester}`;\n    const location = useLocation();\n    const history= useHistory();\n\n    let handleChange = (event) => {\n        let optionValue = event.target.value;\n        \n        if (entityInfo.entity === \"kurikulum\") {\n            let sesi_masuk = optionValue.substring(11, 20);\n            dispatch(setSesiMasuk({ sesi_masuk }));\n        }\n        else {\n            let sesi = optionValue.substring(5, 14);\n            let semester = optionValue.substring(24, 25);\n            dispatch(setSesiSemester({ sesi, semester }));\n            if (location.pathname===\"/admin_graph\"){\n                // console.log({location:location.pathname});\n                history.push(location.pathname)\n            }\n        }\n    }\n\n    useEffect(() => {\n        let dropDownMenu= document.querySelector('.dropdownMenu');\n        dropDownMenu.value=stringValue;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <>\n            {willTitleOccur && <>\n             {/* <span>Path : {location.pathname}</span> */}\n\n                <Typography className=\"menu-title\" component=\"h2\" variant=\"h6\" color=\"primary\">\n                    Choose for {entityInfo['entity'].replace(/_/g, \" \").replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))}\n                    {entityInfo.args.map((value, index) => {\n                        return (\n                            <Fragment key={`${value['name']}${index}`}>\n                                {value['name']} {value['value']}\n                            </Fragment>\n                        )\n                    })}\n                </Typography>\n            </>\n            }\n            <FormControl>\n                <Select native onChange={handleChange} className=\"dropdownMenu\">\n                    \n                    {jsonArray.map((value, index) => {\n                        let str = \"\";\n                        if (value === null) {\n                            str = \"No data\";\n                        }\n                        else {\n                            entityInfo.arrayDropdownColumns.forEach((val) => {\n                                str += (val.replace(/_/g, \" \").replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase()))) + \" \" + value[val] + \" \");\n                            })\n                        }\n                        return (\n                            <option value={str} key={`B${index}`}>\n                                {str}\n                            </option>\n                        )\n                    })\n                    }\n\n                </Select>\n            </FormControl>\n        </>\n    )\n}\n\nexport default DropdownHTML\n","import React, { Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useDispatch } from 'react-redux';\nimport { setSubjekPelajar, setSubjekPensyarah } from './TableDataSlice';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport { Button, Collapse, Divider, Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\n\n\nfunction TableAccordion({ entityInfo, jsonArray, tableNum }) {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            width: '100%',\n            '& > *': {\n                borderBottom: 'unset',\n            },\n        },\n        root2: {\n            margin: \"12px\",\n        },\n        heading: {\n            fontSize: theme.typography.pxToRem(15),\n            fontWeight: theme.typography.fontWeightRegular,\n        },\n        insideAccordion:{\n            margin: \"10px 5vw 0\", width: \"80%\"\n        },\n        '@media screen and (max-width: 1000px)': {\n            insideAccordion:{ \n            width: \"90%\"\n            }\n        }\n    }));\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n\n    function handleClick(index, isExpandMore) {\n        /**\n         * CLICKING SVG/ ICONS ALWAYS HAS PROBLEMS!\n         * AS SVG/ ICONS HAVE A PATH ON WHICH CLICKS OCCUR AS WELL AS THE ATTACHED ONCLICK EVENT \n         * \n         */\n\n        let idDisplayElement = `display${index}`;\n        let idIconExpandMore = `iconExpandMore${index}`;\n        let idIconExpandLess = `iconExpandLess${index}`;\n        let element, sibling;\n        let displayElement = document.getElementById(idDisplayElement);\n        if (isExpandMore) {\n            element = document.getElementById(idIconExpandMore);\n            sibling = document.getElementById(idIconExpandLess);\n        }\n        else {\n            sibling = document.getElementById(idIconExpandMore);\n            element = document.getElementById(idIconExpandLess);\n        }\n        element.classList.toggle(\"none\");\n        sibling.classList.toggle(\"none\");\n        displayElement.classList.toggle(\"none\")\n    }\n\n    function handlePelajar(kod_subjek, seksyen) {\n        // console.log({kod_subjek, seksyen})\n        dispatch(setSubjekPelajar({ kodSubjek: kod_subjek, seksyen }));\n        history.push('/subjek_pelajar');\n\n    }\n    function handlePensyarah(kod_subjek, seksyen) {\n        // console.log({kod_subjek, seksyen})\n        dispatch(setSubjekPensyarah({ kodSubjek: kod_subjek, seksyen }));\n        history.push('/subjek_pensyarah');\n\n    }\n\n    return (\n        <>\n            <TableContainer className=\"table-title\" component={Paper} style={{ marginBottom: \"10px\" }}>\n                <Table size=\"small\" aria-label=\"collapsible table\">\n                    <TableHead>\n                        <TableRow style={{ color: \"white !important\", backgroundColor: \"rgb(76, 255, 228)\" }}>\n                            <TableCell align=\"center\" key={`${tableNum}last`} />\n                            {\n                                entityInfo['arrayColumns'].map((value, index) => {\n                                    return (\n                                        <TableCell align=\"center\" key={`${tableNum}${index}`} >\n                                            {value.replace(/_/g, \" \").replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))}\n                                        </TableCell>\n                                    );\n                                })\n                            }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            jsonArray.map((value, indexJsonArray) => {\n                                if (value === null) {\n                                    value = {};\n                                    entityInfo.arrayColumns.forEach((val) => {\n                                        value[val] = \"None\";\n                                    });\n                                }\n                                if (value['seksyen_list'] === null) {\n                                    value['seksyen_list'] = [{ seksyen: \"-\", \"bil_pelajar\": \"-\", \"pensyarah\": \"-\" }];\n                                }\n                                return (\n                                    <Fragment key={indexJsonArray}>\n                                        <TableRow className={classes.root}>\n                                            <TableCell align=\"center\" key={`${tableNum}last`} aria-label=\"expand row\">\n                                                <Typography variant=\"button\">\n                                                    <ExpandMoreIcon fontSize=\"small\" id={`iconExpandMore${indexJsonArray}`} onClick={() => { handleClick(indexJsonArray, true) }} />\n                                                    <ExpandLessIcon fontSize=\"small\" id={`iconExpandLess${indexJsonArray}`} className=\"none\" onClick={() => { handleClick(indexJsonArray, false) }} />\n                                                </Typography>\n                                            </TableCell>\n                                            {entityInfo.arrayColumns.map((val, idx) => {\n                                                return (\n                                                    <TableCell align=\"center\" key={`${tableNum}${indexJsonArray}${idx}`} >\n                                                        {value[val]}\n                                                    </TableCell>\n                                                )\n                                            })\n                                            }\n\n                                        </TableRow>\n                                      \n                                        <TableRow>\n                                            <TableCell className=\"none\" id={`display${indexJsonArray}`} colSpan={6} style={{ paddingBottom: 0, paddingTop: 0 }}>\n                                                <Collapse in={true} timeout=\"auto\" unmountOnExit>\n                                                <Divider />\n                                                    <div className=\"insideAccordion\">\n                                                        <Typography variant=\"overline\" gutterBottom={true} color=\"primary\">\n                                                            View subject and section for this subject\n                                                        </Typography>\n\n                                                        <TableContainer className=\"some-miserly-margin\">\n                                                            <Table size=\"small\" >\n\n                                                                <TableHead>\n\n                                                                    <TableRow className=\"tableRowNoBorder\" style={{ color: \"white !important\", backgroundColor: \"rgb(76, 255, 228)\" }}>\n\n                                                                        <TableCell align=\"center\"> Seksyen </TableCell>\n                                                                        <TableCell align=\"center\" > Bil Pelajar </TableCell>\n                                                                        <TableCell align=\"center\" > Pensyarah </TableCell>\n                                                                        {\n                                                                            value['seksyen_list'][0]['seksyen'] !== \"-\" &&\n                                                                            <>\n                                                                                <TableCell align=\"center\">\n                                                                                    Action Pelajar\n                                                                            </TableCell>\n                                                                                <TableCell align=\"center\">\n                                                                                    Action Pelajar\n                                                                            </TableCell>\n                                                                            </>\n                                                                        }\n                                                                    </TableRow>\n                                                                </TableHead>\n                                                                {\n                                                                    <TableBody>\n\n                                                                        {\n                                                                            value['seksyen_list'].map((valueObject, indexValueObject) => {\n                                                                                if (valueObject === null || valueObject === undefined) return null;\n\n                                                                                return (\n                                                                                    <TableRow className=\"tableRowNoBorder\" key={`tableAccordion${indexValueObject}`} >\n                                                                                        <TableCell align=\"center\">{valueObject['seksyen']} </TableCell>\n                                                                                        <TableCell align=\"center\">{valueObject['bil_pelajar']} </TableCell>\n                                                                                        <TableCell align=\"center\">{valueObject['pensyarah']} </TableCell>\n\n                                                                                        {value['seksyen_list'][0]['seksyen'] !== \"-\" &&\n                                                                                            <>\n                                                                                                <TableCell align=\"center\">\n                                                                                                    <Button size=\"small\" variant=\"outlined\" key={`buttonNew${tableNum}${indexValueObject}`}\n                                                                                                        onClick={() => handlePelajar(value['kod_subjek'], valueObject['seksyen'])}>\n                                                                                                        <Typography style={{ fontSize: 12 }}>\n                                                                                                            Pelajar\n                                                                                </Typography>\n                                                                                                    </Button>\n                                                                                                </TableCell>\n                                                                                                <TableCell align=\"center\">\n                                                                                                    <Button size=\"small\" variant=\"outlined\" key={`buttonNew${tableNum}${indexValueObject}`}\n                                                                                                        onClick={() => handlePensyarah(value['kod_subjek'], valueObject['seksyen'])}>\n                                                                                                        <Typography style={{ fontSize: 12 }}>\n                                                                                                            Pensyarah\n                                                                                 </Typography>\n                                                                                                    </Button>\n                                                                                                </TableCell>\n                                                                                            </>\n                                                                                        }\n                                                                                    </TableRow>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </TableBody>\n\n                                                                }\n                                                            </Table>\n                                                        </TableContainer>\n                                                    </div>\n                                                </Collapse>\n                                            </TableCell>\n                                        </TableRow>\n                                    </Fragment>\n\n                                )\n                            }\n                            )\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n\n    )\n}\n\nexport default TableAccordion\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n// import { userAPI } from './userAPI'\n\nexport const setAdminSessionId = createAsyncThunk(\n  // action type is \"[sliceName]/[reducerPropertyName]\"\n  'authUser/setAdminSessionIdStatus',\n  async () => {\n       // let password = JSON.parse(localStorage.getItem(\"admin_password\"));\n    let password = undefined;\n    // console.log(\"Hi executed\")\n    // if (password === undefined || password === null || password ===\"\" || fetchAgainDespiteLocalStorage) {\n    let data = await fetch('http://web.fc.utm.my/ttms/web_man_webservice_json.cgi?entity=authentication&login=ad2021&password=scsx3104')\n    data = await data.json();\n    password = await data[0]['session_id'];\n    // localStorage.setItem(\"admin_password\", \"hi\");\n    // console.log({password})\n    return password;\n  }\n)\n\n// setAdminSessionId(false);\n\nconst initialState = {\n    fetchFirstTime: true,\n    adminSessionId: \"1122\"\n}\n\nconst sessionIdSlice = createSlice({\n    name: 'sessionId',\n    initialState,\n    reducers: {\n        setFetchFirstTime: (state, {payload})=>{\n            state.fetchFirstTime = payload;\n        },\n        setAdminSessionIdSync: (state, {payload})=>{\n            state.adminSessionId = payload;\n        }   \n\n    },\n    extraReducers: {\n        // action type is \"authUser/setAdminSessionIdStatus\"\n        [setAdminSessionId.fulfilled]: (state, {payload}) => {\n            state.fetchFirstTime = false;\n            state.adminSessionId = payload;\n        }\n    }\n})\n\nexport default sessionIdSlice.reducer\n\nexport const { setFetchFirstTime } = sessionIdSlice.actions;\nexport const { setAdminSessionIdSync } = sessionIdSlice.actions;\n\nexport const selectAdminSessionId = state => { return state.sessionId.adminSessionId; };\nexport const selectFetchFirstTime = state => { return state.sessionId.fetchFirstTime; };\n\n","// CONDENSE TABLE\nimport React, { useState, useEffect, Fragment } from 'react'\nimport { generateURL, generateLocalStorageName, sortByKey, getLengthToShow } from \"./helper\"\nimport TableRest from \"./TableRest\"\nimport DropdownHTML from \"./DropdownHTML\"\nimport TableAccordion from \"./TableAccordion\"\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { setFetchFirstTime, setAdminSessionId, selectFetchFirstTime } from \"../pages/SessionIdSlice\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ExpandMore, ExpandLess } from '@material-ui/icons'\n\n\nfunction TableData({ entityInfo, isTable = false, isAccordion = false, isDropDown = false, tableNum = 1, willActionOccur = false, willTitleOccur = true }) {\n\n    let [jsonArray, setJsonArray] = useState([]);\n    let fetchFirstTime = useSelector(selectFetchFirstTime);\n    const dispatch = useDispatch();\n    // after redux dispatch entity2 of the parent will get changed. \n    // but the child of this parent needs 2 changes to get correct props\n    // DOM is re-rendered only once however as parent re-renders only once\n    // so child must use it useEffect() which will render twice with props\n    // is useEffect() dependency array\n    let sortHandleChild = (stringIndex) => {\n        setJsonArray(sortByKey(stringIndex, entityInfo, [...jsonArray], tableNum));\n    };\n    let [startOffset, setStartOffset] = useState(0);\n    let length = parseInt(jsonArray.length);\n    let [lengthToShow, setLengthToShow] = useState(parseInt(getLengthToShow()));\n    // if (lengthToShow>length){lengthToShow=length;}\n    let numberOfPagination = (length % lengthToShow === 0) ? length / lengthToShow : Math.ceil(length / lengthToShow)\n    let indexPagination = [];\n    for (let count = 0; count < numberOfPagination; count++) {\n        indexPagination.push(count);\n    }\n\n    function displayPages(event, number) {\n        let target= event.target;\n        target.className+= \" active\";\n        console.log({target})\n        setStartOffset(number * parseInt(lengthToShow));\n\n    }\n\n    function add(a, b, c) {\n        if (a + b <= c) return a + b;\n        else return c;\n    }\n\n    useEffect(() => {\n\n        // FETCH WILL ONLY OCCUR AS IT'S BASED ONCE BASED ON [ENTITYENFO]\n\n        let mounted = true;\n        let localStorageName = generateLocalStorageName(entityInfo);\n        let fetchFromLocalStorage = localStorage.getItem(localStorageName);\n        if (fetchFromLocalStorage !== null && fetchFromLocalStorage !== \"\") {\n            fetchFromLocalStorage = [...JSON.parse(fetchFromLocalStorage)];\n            setJsonArray(fetchFromLocalStorage);\n        }\n        else {\n        let url = generateURL(entityInfo);\n        // console.log(url)\n        fetch(url)\n            .then((data) => {\n                return data.json();\n            })\n            .then((data) => {\n                if (mounted) {\n                    // localStorage.setItem(localStorageName, JSON.stringify(data));\n                    dispatch(setFetchFirstTime(true));\n                    // console.log(data)\n                    setJsonArray([...data]);\n                }\n            })\n            .catch(err => {\n                if (fetchFirstTime) {\n                    let willSessionId = entityInfo.args.findIndex(value => { return value.name === \"session_id\" })\n                    // console.log({ willSessionId, fetchFirstTime });\n                    if (willSessionId !== -1) {\n                        dispatch(setFetchFirstTime(false));\n                        dispatch(setAdminSessionId());\n                    }\n                }\n            })\n        return function cleanup() {\n            mounted = false;\n        }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [entityInfo])\n\n    if (isTable) {\n        return (\n            <>\n                \n                {\n                    willTitleOccur &&\n                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" className=\"table-title\">\n                        Showing: entity: {entityInfo['entity'].replace(/_/g, \" \")},\n                        {entityInfo.args.map((value, index) => {\n                        return (\n                            <Fragment key={`${tableNum}${index}`} >\n                                &nbsp;\n                                {value['name'].replace(/_/g, \" \")}:\n                                    &nbsp;\n                                {value['value']},\n                            </Fragment>\n                        )\n                    })}\n                    </Typography>\n                }\n                {\n                entityInfo['entity']!==\"pelajar\" &&\n                <div className=\"paginationDiv\">\n                    <div>\n                        Showing maximum &nbsp;\n                        <select\n                            value={lengthToShow}\n                            onChange={(event) => {\n                                let selectValue = event.target.value;\n                                setLengthToShow(selectValue);\n                                localStorage.setItem(\"lengthToShow\", selectValue)\n                            }}\n                        >\n                            <option> 5 </option>\n                            <option> 10 </option>\n                            <option> 20 </option>\n                            <option> 30 </option>\n                            <option> 50 </option>\n                            {/* <option> {lengthToShow} </option> */}\n                        </select>\n                        &nbsp;\n                        items.  &nbsp; &nbsp;\n                    </div>\n                    <div className=\"paginationDivWrapper\">\n                    Total {length} items: [{startOffset + 1}...{add(startOffset, parseInt(lengthToShow), length)} ] &nbsp; &nbsp;\n                        {\n\n                            indexPagination.map((value, index) => {\n                                if (index<9){\n                                return (\n                                    <Fragment  key={`pagination${index}`}>\n                                        <span className=\"paginationSpan\" id=\"spanPages\" onClick={(event) => displayPages(event, index)} >\n                                            {value + 1}\n                                        </span>\n                                    </Fragment>\n                                )\n                                }\n                                else{\n                                    return (\n                                        <Fragment  key={`pagination${index}`}>\n                                        <span className=\"paginationSpan paginationLargeSpan\" id=\"spanPages\" onClick={(event) => displayPages(event, index)} >\n                                            {value + 1}\n                                        </span>\n                                    </Fragment>\n                                    )\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n                 }\n                <TableContainer component={Paper}>\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                {\n                                    entityInfo['arrayColumns'].map((value, index) => {\n                                        return (\n                                            <TableCell align=\"center\" key={`${tableNum}${index}`} onClick={() => sortHandleChild(`${index}`)}>\n                                                {value.replace(/_/g, \" \").replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))}\n                                                <>\n                                                    <span className={`sortIndicator none`}>\n                                                        +\n                                                    </span>\n                                                    <span className={`sortFront`}>\n                                                        <ExpandMore color=\"secondary\" fontSize=\"small\"/>\n                                                    </span>\n                                                    <span className={`sortBack none`}>\n                                                        <ExpandLess color=\"secondary\" fontSize=\"small\"/>\n                                                    </span>\n                                                </>\n                                            </TableCell>\n                                        );\n                                    })\n                                }\n                                {\n                                    willActionOccur && <TableCell align=\"center\">Action</TableCell>\n                                }\n                            </TableRow>\n                        </TableHead>\n                        {\n                            !isAccordion && entityInfo!==\"pelajar\" &&\n                            <TableRest\n                                entityInfo={entityInfo}\n                                jsonArray={jsonArray}\n                                tableNum={1}\n                                willActionOccur={willActionOccur}\n                                willTitleOccur={willTitleOccur}\n                                startOffSet={startOffset}\n                                lengthToShow={parseInt(lengthToShow)}\n                            />\n                        }\n                         {\n                            !isAccordion && entityInfo===\"pelajar\" &&\n                            <TableRest\n                                entityInfo={entityInfo}\n                                jsonArray={jsonArray}\n                                tableNum={1}\n                            />\n                        }\n                    </Table>\n                </TableContainer>\n\n            </ >\n        )\n    }\n    else if (isDropDown) {\n        return (\n            <>\n                <DropdownHTML\n                    key={tableNum}\n                    entityInfo={entityInfo}\n                    jsonArray={jsonArray}\n                    willTitleOccur={willTitleOccur} />\n            </>\n        )\n    }\n    else if (isAccordion) {\n        return (\n            <TableAccordion\n                entityInfo={entityInfo}\n                jsonArray={jsonArray}\n                tableNum={tableNum}\n            />\n        );\n    }\n    else {\n        return (\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\n                State whether you want table or dropdown menu, dev\n            </Typography>\n        )\n    }\n}\n\nexport default TableData\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectSesiSemester } from '../components/TableDataSlice';\nimport TableData from '../components/TableData'\n\nfunction Subjek() {\n    const url = \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\"\n    let entity1 = {\n        url,\n        argNum: 0,\n        entity: \"sesisemester\",\n        args: [],\n        arrayDropdownColumns: [\"sesi\", \"semester\"],\n        arrletayOtherColumns: [\"sesi_semester_id\", \"tarikh_mula\", \"tarikh_tamat\"],\n        arraySelectIds: [],\n        lengthToShow: -1\n    }\n    // after redux dispatch entity2 of the parent will get changed. \n    // but the child of this parent needs 2 changes to get correct props\n    // DOM is re-rendered only once however as parent re-renders only once\n    // so child must use it useEffect() which will render twice\n    let { sesi, semester } = useSelector(selectSesiSemester);\n    // console.log({ sesi, semester });\n    let entity2 = {\n        url,\n        argNum: 2,\n        entity: \"subjek\",\n        args: [{ name: \"sesi\", value: sesi }, { name: \"semester\", value: semester }],\n        arrayColumns: [\"nama_subjek\", \"kod_subjek\", \"bil_pelajar\", \"bil_pensyarah\", \"bil_seksyen\"],\n        arraySelectIds: [\"sesi\", \"semester\"],\n        lengthToShow: 10\n    }\n    return (\n        <>\n            <TableData\n                entityInfo={entity1}\n                isDropDown={true}\n                tableNum={1}\n            />\n            <TableData\n                entityInfo={entity2}\n                isTable={true}\n                tableNum={2}\n            />\n        </>\n    )\n\n}\n\nexport default Subjek\n","import React from 'react'\nimport TableData from '../components/TableData'\n\nfunction SesiSemester() {\n    const url = \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\"\n    let entity1 = {\n        url,\n        argNum: 0,\n        entity: \"sesisemester\",\n        args: [],\n        arrayColumns: [\"sesi\", \"semester\", \"sesi_semester_id\", \"tarikh_mula\", \"tarikh_tamat\"],\n        arraySelectIds: [],\n        lengthToShow: -1\n    }\n    \n    return (\n        <>\n            <TableData\n                entityInfo={entity1}\n                isTable={true}\n                tableNum={1}\n                willActionOccur={true}\n            />\n        </>\n    )\n\n}\n\nexport default SesiSemester\n\n\n\n","import React from 'react'\nimport { Typography, Link } from \"@material-ui/core\"\n\nexport function Footer() {\n    return (\n        <>\n        <div style={{padding: \"10px 0px\"}}>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"/\">\n                Iconic Four Inc.\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n        \n        </div>\n        </>\n    );\n\n}","import { createSlice } from '@reduxjs/toolkit';\n\nlet local_auth_user = JSON.parse(localStorage.getItem(\"auth_user\")) ?? {};\n\nexport function getAuthDetails(local_auth_user) {\n  let { login_name: loginName, full_name: fullName, description, session_id: sessionId } = local_auth_user;\n  return { loginName, fullName, description, sessionId }\n}\n\nexport function getProfession(local_auth_user) {\n  let local_password = localStorage.getItem(\"password\") ?? \"\";\n  let loginNameLength = null;\n  if (!Object.is(local_auth_user['login_name'], undefined)) {\n    loginNameLength = local_auth_user['login_name'].length ?? 0;\n    let passwordLength = local_password.length;\n    if (loginNameLength === 9 && passwordLength === 12) return \"Student\"; // A 18 CS 30 26 (9)  20 19 01 M1 02 99 (12)\n    else if (loginNameLength === 5 && passwordLength === 7) return \"Teacher\"; // 12 08 5 (5) S8 08 32 3 (7)\n    else if (loginNameLength === 6 && passwordLength === 8) return \"Admin\"; //  ad 20 21 (6) sc sx 31 04 (8) \n    // scsx3104 \n    else return \"\";\n  }\n}\n\nexport const slice = createSlice({\n  name: 'authUser',         // slice name\n  initialState: {\n    authUserValues: {\n      ...getAuthDetails(local_auth_user), profession: getProfession(local_auth_user) || null,\n\n    },\n  },\n  reducers: {\n    // action type is \"authUser/setAuthUser\"\n    setAuthUser: (state, action) => {\n      state.authUserValues = { ...action.payload };\n    }\n  },\n \n});\n\n\nexport const { setAuthUser } = slice.actions;\nexport const selectAuthUser = state => { return state.authUser.authUserValues; };\n\nexport default slice.reducer;\n\n// CORRECT: return undefined|| 0\n// WRONG:   return undefined.length|| 0\n// CORRECT: try {return undefined} try{ return 0 }\n// CORRECT: return undefined.length?? 0\n// BEST WAY: try...catch\n\n// dispatch the async thunk\n\n// dispatch(fetchSessionId());\n// console.log(store.getState().adminSessionId);","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Icon from \"@material-ui/core/Icon\";\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport { ListItemIcon, ListItemText, Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { Footer } from './Footer';\nimport Switch from '@material-ui/core/Switch';\nimport { useDispatch } from 'react-redux';\nimport { setAuthUser } from '../pages/SignInUpSlice';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    color: \"lavendar\",\n    textAlign: \"center\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    background: \"radial-gradient(circle at center center, rgba(7,255,250, 0.4) 0%, rgba(7,255,250, 0.4) 7%,transparent 7%, transparent 100%),linear-gradient(90deg, rgb(244,252,252),rgb(244,252,252)); background-size: 16px 16px\"\n  },\n  drawerHeader: {\n    backgroundImage: \"radial-gradient(circle at center center, rgba(46,223,250, 0.99) 0%, rgba(46,223,250, 0.99) 7%,transparent 7%, transparent 100%),linear-gradient(90deg, rgb(255,255,255),rgb(255,255,255)); background-size: 16px 16px\"\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    // marginLeft: 0,\n  },\n  '@media screen and (max-width: 1000px)': {\n\n    appBarShift: {\n      width: `calc(100%)`,\n      marginLeft: \"60vw\",\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawer: {\n      width: \"60vw\",\n    },\n    drawerPaper: {\n      width: \"60vw\",\n    },\n    content: {\n      marginLeft: \"-60vw\"\n    },\n    appBar: {\n      padding: \"0px 10px\"\n    },\n    '@media screen and (max-width: 600px)': {\n      appBarShift: {\n        width: `calc(100%)`,\n        marginLeft: \"80vw\",\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      drawer: {\n        width: \"80vw\",\n      },\n      drawerPaper: {\n        width: \"80vw\",\n      },\n      content: {\n        marginLeft: \"-80vw\"\n      },\n      appBar: {\n        padding: \"0px 10px\"\n      },\n    }\n}\n\n}));\n\n// let teacherSpecial = [{ text: 'Subjek', url: \"/sesisemester\", icon: \"subject\" },];\n// professionString\n\nconst NavItem = ({ url, text, icon }) => {\n  return (\n    // <> </>\n    <Link to={url}>\n      <ListItem button key={`${text}${url}${icon}`}>\n        <ListItemIcon>\n          <Icon>{icon}</Icon>\n        </ListItemIcon>\n        <ListItemText component={'span'} variant={'body2'}>\n          {text}\n        </ListItemText>\n      </ListItem>\n    </Link>\n  )\n}\n\nexport default function PersistentDrawerLeft({ professionString, children }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState({\n    checkedA: true,\n  });\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    dispatch(setAuthUser(null));\n    localStorage.removeItem(\"auth_user\");\n    localStorage.removeItem(\"auth_admin\");\n    window.location.href = \"/\"\n  };\n\n  let nonAdminLinks1= [\n    { text: 'Profile', url: \"/\", icon: \"home\" },\n    { text: 'User Timetable', url: \"/timetable\", icon: \"today\" },\n  ]\n  let adminLinks1= [\n    { text: 'Profile', url: \"/\", icon: \"home\" }\n  ]\n  let finalLinks1=[];\n  if (professionString===\"Admin\"){ finalLinks1= [...adminLinks1]; }\n  else if (professionString===\"Teacher\"){ finalLinks1= [...nonAdminLinks1]; }\n  else if (professionString===\"Student\"){ finalLinks1= [...nonAdminLinks1]; }\n\n\n  let adminLinks2= [\n    { text: \"Subjek\", url: \"/subjek\", icon: \"school\" },\n    { text: \"Pensyarah\", url: \"/pensyarah\", icon: \"school\" },\n    { text: \"Pelajar\", url: \"/pelajar\", icon: \"school\" },\n    { text: \"Pensyarah Subjek\", url: \"/pensyarah_subjek\", icon: \"school\" },\n    { text: \"Pelajar Subjek\", url: \"/pelajar_subjek\", icon: \"school\" },\n    { text: 'Subjek Seksyen', url: \"/subjek_seksyen\", icon: \"school\" },\n    { text: 'Kurikulum', url: \"/kurikulum\", icon: \"school\" },\n    { text: 'Ruang', url: \"/ruang\", icon: \"room_meeting\" },\n  ]\n  let studentLinks2=[\n    { text: 'Subjek Seksyen', url: \"/subjek_seksyen\", icon: \"school\" },\n    { text: 'Kurikulum', url: \"/kurikulum\", icon: \"school\" },\n    { text: 'Ruang', url: \"/ruang\", icon: \"room_meeting\" }, \n  ]\n  let teacherLinks2=[\n    { text: \"Subjek\", url: \"/subjek\", icon: \"school\" },\n    { text: \"Pensyarah Subjek\", url: \"/pensyarah_subjek\", icon: \"school\" },\n    { text: \"Pelajar Subjek\", url: \"/pelajar_subjek\", icon: \"school\" },\n    { text: 'Subjek Seksyen', url: \"/subjek_seksyen\", icon: \"school\" },\n    { text: 'Kurikulum', url: \"/kurikulum\", icon: \"school\" },\n    { text: 'Ruang', url: \"/ruang\", icon: \"room_meeting\" }, \n  ]\n\n  let finalLinks2=[];\n\n  if (professionString===\"Student\"){ finalLinks2= [...studentLinks2]; }\n  else if (professionString===\"Teacher\"){ finalLinks2= [...teacherLinks2]; }\n  else if (professionString===\"Admin\"){ finalLinks2= [...adminLinks2]; }\n\n  return (\n    <>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <span\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(classes.menuButton, open && classes.hide, \"buttonSpan-outlined\")}\n            >\n              <span className= \"buttonSpan\">\n              <MenuIcon fontSize=\"small\" />\n              </span>\n              <span className=\"md-below-invisible\">\n              MENU \n              </span>\n            </span>\n            <div style={{margin:\"auto\"}}>\n              <Typography\n                component=\"h3\"\n                variant=\"h3\"\n                color=\"inherit\"\n                align=\"center\"\n                className={classes.toolbarTitle}\n              >\n                ICONIC FOUR SCHEDULER  \n              </Typography>\n            </div>\n          </Toolbar>\n          <Divider />\n          <div>\n            <Typography align=\"center\">\n              Made by: School of Computing, Universiti Teknologi Malaysia.\n          {/* <Button variant=\"outlined\" >LOG OUT</Button> */}\n            </Typography>\n          </div>\n\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          style={{ backgroundImage: \"white\" }}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List dense={true} disablePadding={true} className={classes.drawerHeader}>\n            <>\n              {finalLinks1.map(  ({ text, url, icon },index) => { \n                return (\n                <NavItem text={text} url={url} icon={icon} key={`${index}firstNav`} />\n              );})}\n              {!Object.is(professionString, \"Admin\") &&\n              <Divider />\n              }\n              {finalLinks2.map(({ text, url, icon }, index) => { \n                return (\n                <NavItem text={text} url={url} icon={icon} key={`${index}secondNav`} />\n              ) } )}\n              <Divider />\n              <ListItem button key=\"logout\">\n                <ListItemIcon>\n  \n                    <Switch\n                      checked={state.checkedA}\n                      onChange={handleChange}\n                      name=\"checkedA\"\n                      color=\"primary\"\n                      inputProps={{ 'aria-label': 'primary checkbox' }}\n                    />\n                \n                </ListItemIcon>\n                <ListItemText>\n                  Logout\n                  </ListItemText>\n              </ListItem>\n\n              <Divider />\n            </>\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className=\"grid-container\"/>\n          <Grid container dense=\"true\" component=\"div\" className=\"paperMainGrid\">\n\n            <Grid item md={2} xs={12} sm={false} component=\"div\" className=\"paperSidePart\">\n\n            </Grid>\n\n            <Grid item md={8} xs={12} sm={12} component=\"div\" className=\"paperMiddlePart\">\n              <div className=\"paddingGiver\">\n              <br />\n\n              {children}\n              </div>\n            </Grid>\n\n            <Grid item md={2} xs={12} sm={false} component=\"div\" className=\"paperSidePart\">\n\n            </Grid>\n          </Grid>\n        </main>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport UTMGate from \"../resources/UTM_Gate.jpg\";\nimport { getAuthDetails, getProfession, setAuthUser } from './SignInUpSlice';\nimport { Footer } from '../components/Footer';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n    bgPaper: {\n        backgroundColor: \"rgb(255, 255, 255, 0.8)\",\n        width: \"40%\",\n        height: \"min-content\",\n        margin: \"auto\"\n    },\n    bg: {\n        margin: \"0\",\n        paddingTop: \"10vh\",\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: `url(${UTMGate})`,\n        backgroundBlendMode: \"overlay\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"100vw 100vh\",\n    },\n    paper: {\n        paddingTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    '@media screen and (max-width: 1000px)': {\n        bgPaper: {\n            width: \"100%\",\n            height: \"min-content\",\n            marginTop: \"10vh\"\n        },\n        bg: {\n            height: \"100vh\",\n            backgroundImage: `url(${UTMGate})`,\n            backgroundSize: \"200vw 100vh\",\n        },\n\n    }\n}));\n\nexport default function SignInUp({ action, actionIsSignIn }) {\n    // const dispatch = useDispatch();\n    // dispatch(setSesiSemester({ sesi, semester }));\n    let [failedLogin, setFailedLogin] = useState(false);\n    let [username, setUserName] = useState(\"A18CS3026\");\n    let [password, setPassword] = useState(\"201901M10299\");\n    const classes = useStyles();\n    function loginClick(evt) {\n        evt.preventDefault();\n        let auth_user = localStorage.getItem(\"auth_user\");\n        if (auth_user === \"\" || auth_user === null) {\n            login(username, password);\n        } else {\n            alert(\"Already authenticated... Log out? \");\n            logout();\n        }\n    }\n\n    async function login(username, password) {\n        let url = `http://web.fc.utm.my/ttms/web_man_webservice_json.cgi`\n        let body = `entity=authentication&login=${username}&password=${password}`;\n        url = `${url}?${body}`;\n        let response = await fetch(url);\n        if (response.ok) {\n            const contentType = response.headers.get(\"content-type\");\n            if (contentType && contentType.indexOf(\"text/plain\") !== -1) {\n                // process your text/plain but!!! JSON data further\n                // console.log(\"stopped here\")\n                try {\n                    response = await response.json();\n                }\n                catch (error) {\n                    setFailedLogin(true);\n                    return;\n                }\n                // console.log(\"stopped here\")\n\n                let auth_user = JSON.stringify(response[0]);\n                localStorage.setItem(\"auth_user\", auth_user);\n                loginAdmin(auth_user);\n                localStorage.setItem(\"password\", password);\n            }\n            else {\n                // it is text data.\n                response = await response.json();\n                // console.log(response)\n            }\n        }\n        else {\n            console.log(\"response not okay\")\n        }\n    }\n\n    async function loginAdmin(auth_user) {\n        let auth_user_object = JSON.parse(auth_user)\n        let body = `session_id=${auth_user_object['session_id']}`;\n        let url = \"http://gmm.fc.utm.my/~mrazak/scsx3104/2021-1/TechExp3/auth4.php\";\n        url = `${url}?${body}`;\n        let response = await (fetch(url));\n        if (response.ok) {\n            const contentType = response.headers.get(\"content-type\");\n            // console.log({ contentType })\n            if (contentType && contentType.indexOf(\"text/html\") !== -1) {\n                // it is text/html data jsonable as well.\n                try {\n                    response = await response.json();\n                }\n                catch (error) {\n                    setFailedLogin(true);\n                    return;\n                }\n\n            }\n            let auth_admin = JSON.stringify(response[0]);\n            localStorage.setItem(\"auth_admin\", auth_admin);\n            reloacte();\n        }\n        else {\n            // reloacte();\n            response = await response.json();\n        }\n    }\n\n\n    function reloacte() {\n        let local_auth_user = JSON.parse(localStorage.getItem(\"auth_user\")) ?? {};\n        setAuthUser({\n            ...getAuthDetails(local_auth_user), profession: getProfession(local_auth_user)\n        });\n        // console.log({\n        //     ...getAuthDetails(local_auth_user) || null\n        // })\n        // history.push('/timetable');\n        // but doesn't render Timetable of course. just url changed by history.push!\n        window.location.href = '/';\n    }\n\n    function logout() {\n        localStorage.removeItem(\"auth_user\");\n        localStorage.removeItem(\"auth_admin\");\n        window.location.href = \"/\"\n    }\n\n    const inputUserName = useRef(null);\n    const inputUserPassword = useRef(null);\n\n    const [user, setUser] = React.useState('Student');\n\n    const handleChange = (event) => {\n        setUser(event.target.value)\n        let currentUser= event.target.value; \n        console.log({currentUser})\n        if (currentUser === \"Student\"){\n            // usernameElement.value=\"A18CS3026\"\n            // passwordElement.value=\"201901M10299\"\n            setUserName(\"A18CS3026\")\n            setPassword(\"201901M10299\")\n        }\n        else if(currentUser===\"Teacher\"){\n            // usernameElement.value=\"12085\"\n            // passwordElement.value=\"S808323\"\n            setUserName(\"12085\")\n            setPassword(\"S808323\")\n        }\n        else if(currentUser===\"Admin\"){\n            // usernameElement.value=\"ad2021\"\n            // passwordElement.value=\"scsx3104\"\n            setUserName(\"ad2021\")\n            setPassword(\"scsx3104\")\n        }\n        // S808323 12085\n        // scsx3104 ad2021\n        // A18CS3026 201901M10299\n            // setUser(event.target.value);\n    };\n\n    return (\n        <div className={classes.bg}>\n            <Paper className={classes.bgPaper} >\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <Box className={classes.paper} fontWeight={900} >\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\" >\n                            {action}\n                        </Typography>\n                            <FormControl style={{margin: \"10px 0\"}}>\n                                <InputLabel  id=\"demo-simple-select-label\">User</InputLabel>\n                                <Select\n                                    \n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    value={user}\n                                    label=\"Age\"\n                                    onChange={handleChange}\n                                >\n                                    <MenuItem value=\"Student\">Student</MenuItem>\n                                    <MenuItem value=\"Teacher\">Teacher</MenuItem>\n                                    <MenuItem value=\"Admin\">Admin</MenuItem>\n                                </Select>\n                            </FormControl>\n                        <form className={classes.form} noValidate>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"User name\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                value={username}\n                                autoFocus\n                                ref={inputUserName}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"password\"\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                ref={inputUserPassword}\n                                value={password}\n                            />\n                            {!actionIsSignIn &&\n                                <Button\n                                    type=\"submit\"\n                                    fontWeight=\"900\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    {action}\n                                </Button>\n                            }\n                            {\n                                failedLogin &&\n                                <div id=\"failure\">\n                                    <Chip color=\"primary\" label=\"Wrong username or password\" variant=\"outlined\" />\n                                </div>\n                            }\n                            {actionIsSignIn &&\n                                <>\n                                    <Button\n                                        type=\"submit\"\n                                        fontWeight=\"900\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                        shadow={\"primary\"}\n                                        onClick={loginClick}\n                                    >\n                                        {action}\n                                    </Button>\n                                </>\n                            }\n\n                        </form>\n                    </Box>\n                    <Box mt={2} fontWeight={900}>\n                        <Footer />\n                    </Box>\n                </Container>\n            </Paper>\n        </div>\n    );\n}","import React, {Fragment} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableCell, TableContainer, TableHead, TableRow, TableBody } from '@material-ui/core';\n\nexport function stringAbbrv (stringToAbbrev) { \n    try { return stringToAbbrev.match(/\\b(\\w)/g).join('') } catch { return \"\" } \n}\n// INITIAL STATE CANNOT SET \nexport function generateScheduleData() {\n    let newArray = [];\n    // 7 rows for 7 days/hari (1-7), 14 columns for 14 times/masa \n    for (let i = 0; i < 7; i++) {\n        newArray.push([]);\n        for (let j = 0; j < 12; j++) {\n            newArray[i].push({});\n        }\n    }\n    return newArray;\n}\n\nexport function generateDayState() {\n    return \"SAT SUN MON TUE WED THU FRI\".split(\" \")\n}\n\nexport function generateTimeState() {\n    let newArray = [];\n    for (let i = 0; i < 12; i++) {\n        let time = i + 7;\n        let timeString = \"\";\n        if (time > 12) {\n            timeString = `${time % 12} PM`;\n        }\n        else if (time === 12) {\n            timeString = `${time} PM`;\n        }\n        else {\n            timeString = `${time % 12} AM`;\n        }\n        newArray.push(timeString);\n    }\n    return newArray\n}\n\nexport const useStyles = makeStyles({\n    container: {\n        padding: \"2em 0em 0em\",\n        margin: \"0.5em 1em\",\n    },\n    \"@media screen and (max-width: 960px)\": {\n        container: {\n            padding: \"2em 0.5em 2em\",\n            margin: \"0.5em\",\n        }\n    }\n});\n// py={2} px={8} mx={8} my={2}\nexport const useStylesCells = makeStyles({\n    root: {\n        width: \"90px\",\n        height: \"60px\",\n        fontSize: \"1em\",\n        textAlign: \"center\",\n        padding: \"0px\"\n    },\n    \"@media screen and (max-width: 960px)\": {\n        root: {\n            fontSize: \"0.9em\",\n        }\n    }\n});\n\nexport const useStylesUglyCells = makeStyles({\n    root: {\n        width: \"90px\",\n        height: \"60px\",\n        fontSize: \"0.85em\",\n        textAlign: \"center\",\n        padding: \"0px\"\n    },\n    \"@media screen and (max-width: 960px)\": {\n        root: {\n            fontSize: \"0.9em\",\n        }\n    }\n});\n\nexport function GenerateTimetable({ scheduleData, isRuangUglyTimetable=false, startIndex = 0, endIndex = 14 }) {\n    let newTimeState= generateTimeState();\n    let newDayState= generateDayState();\n    let uglyDesign= useStylesUglyCells();\n    let okayDesign= useStylesCells()\n    let classesCell=(isRuangUglyTimetable)? uglyDesign: okayDesign;\n    return (\n        <>\n            <TableContainer className=\"timetable\">\n        \n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            {\n                                newTimeState.map((value, index) => {\n                                    if ((index >= startIndex) && (index <= endIndex)) {\n                                        return (\n                                            <Fragment key={`timetableComp${index}`}>      \n                                                {index === startIndex &&\n                                                    <TableCell className={classesCell.root} />\n                                                }\n                                                <TableCell className={classesCell.root}>{value}</TableCell>\n                                            </Fragment>\n                                        )\n                                    }\n                                    else{\n                                        return null\n                                    }\n                                })\n                            }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            scheduleData.map((row, rowIndex) => {\n                                return (\n                                    <TableRow key={`${rowIndex}timetable1Comp`}>\n                                        <TableCell className={classesCell.root}> {newDayState[rowIndex]} </TableCell>\n                                        { row.map((column, columnIndex) => {\n                                            if ((columnIndex >= startIndex) && (columnIndex <= endIndex)) {\n                                                return (\n                                                    <Fragment key={`${columnIndex}tableCompComp`}>\n                                                        {!isRuangUglyTimetable &&\n                                                        <TableCell className={classesCell.root}>\n                                                            {stringAbbrv(column['subjek'])} {column['seksyen']} <br />\n                                                            {column['ruang']}\n                                                        </TableCell>\n                                                        }\n                                                        {isRuangUglyTimetable &&\n                                                        <TableCell className={classesCell.root}>\n                                                            {column['subjek']} <br /> \n                                                            {column['seksyen']} \n                                                        </TableCell>\n                                                        }\n                                                    </Fragment>\n                                                )\n                                            }\n                                            else{\n                                                return null;\n                                            }\n                                        })\n                                        }\n                                    </TableRow>\n                                )\n                            }\n                            )\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Menu, MenuItem, Grid } from '@material-ui/core';\nimport produce from \"immer\"\nimport { useMediaQuery } from 'react-responsive'\nimport { generateScheduleData, GenerateTimetable } from \"../components/Timetable\";\n\n// 2 BETTER SOLUTIONS ARE:\n// STORING STRINGS INSTEAD OF OBJECTS AS STATES. WHENEVER OBJECT IS NEEDED.\n// LAZY LOADING TO STORE INITIAL OBJECT.\n\nfunction TimeTable({ userInfo = undefined, ruangInfo, isRuangUglyTimetable = false }) {\n    // “Create” wouldn’t be quite accurate because the state is only created the first time our component renders.\n    // During the next renders, useState gives us the current state. \n\n    // However, unlike this.setState in a class, updating a state letiable always replaces it instead of merging it.\n\n    // login_name: \"B19EC0032\", session_id: \"120270029700626\", full_name: \"NUR ATIQAH BINTI MOHD FUA'AD\", description: \"Pelajar FSKSM\"\n    // \"status\":\"-\",  \"semester\":1, \"kod_subjek\":\"SCSJ3104\", \"nama_subjek\":\"Pembangunan Aplikasi\", \"kod_kursus\":\"SCSJ\", \"seksyen\":5, \"tahun_kursus\":2, \"sesi\":\"2020/2021\"\n    const isBelowMD960 = useMediaQuery({\n        query: '(max-width: 960px)'\n    })\n    const isAboveMD960 = useMediaQuery({\n        query: '(min-width: 960px)'\n    })\n    // let [userInfo] = useState(() => JSON.parse(localStorage.getItem(\"auth_user\")));\n    let [entityData, setEntityData] = useState([]);\n    let [scheduleData, setScheduleData] = useState(() => generateScheduleData());\n    let [currentIndex, setCurrentIndex] = useState(0);\n    const [anchorEl, setAnchorEl] = useState(null);\n    \n    function changeSesiSemester(idx, entityDataObj) {\n        setAnchorEl(null);\n        setScheduleData( generateScheduleData() );\n        try {\n            entityDataObj[idx].forEach((value, index) => {\n                let subjek = value['nama_subjek'];\n                let seksyen = value['seksyen'];\n                // console.log({ subjek, seksyen })\n                if (seksyen === undefined || subjek === undefined) return\n                let url = `http://web.fc.utm.my/ttms/web_man_webservice_json.cgi?entity=jadual_subjek`;\n                url = `${url}&sesi=${value['sesi']}&semester=${value['semester']}&kod_subjek=${value['kod_subjek']}`;\n                url = `${url}&seksyen=${value['seksyen']}`;\n                fetch(url)\n                    .then((data) => { return data.json(); })\n                    .then((data) => {\n                        data.forEach((val) => {\n                            setScheduleData( \n                                produce(newScheduleData => {\n                                    let indexHari = parseInt(val['hari']);\n                                    let indexMasa = parseInt(val['masa'] - 1);\n                                    if (!(isNaN(indexHari) || isNaN(indexMasa))) {\n                                        newScheduleData[indexHari][indexMasa] = {\n                                            ruang: val['ruang']['nama_ruang_singkatan'],\n                                            seksyen,\n                                            subjek\n                                        }\n                                    }\n                                }\n                                )\n                            )\n                        })\n                    });\n            })\n\n            setCurrentIndex(idx)\n        }\n        finally { }\n        // setScheduleData(proxyScheduleData)\n    }\n\n    // DEEP COPY OCCURRED NO!!!!\n    // let [newArrayString, setNewArrayString] = useState(\"\");\n\n    /// ONLY SETSTATE REUPDATED\n    /// BUT WE TRIED TO WITHOUT SETSTATE NOOOO!\n\n\n    useEffect(() => {\n        let url = \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi?entity=\";\n\n        if (!Object.is(userInfo, undefined)) {\n            if (userInfo.profession === \"Student\") {\n                url = `${url}pelajar_subjek&no_matrik=${userInfo['loginName']}`;\n            }\n            else if ((userInfo.profession === \"Teacher\")) {\n                url = `${url}pensyarah_subjek&no_pekerja=${userInfo['loginName']}`;\n            }\n            fetch(url)\n                .then((data) => {\n                    return data.json();\n                })\n                .then((data) => {\n                    let newEntityDataObjek = [[]], newSesiSemester = [], index = -1, newSesi = \"\", newSemester = \"\";\n                    data.forEach((value) => {\n                        if (value['sesi'] === newSesi && value['semester'] === newSemester) {\n                            newEntityDataObjek[index].push(value);\n                        }\n                        else {\n                            index++;\n                            newSemester = value['semester'];\n                            newSesi = value['sesi'];\n                            // newEntityDataObjek.push([]);\n                            newEntityDataObjek[index] = [{ ...value }];\n                            newSesiSemester.push({ sesi: newSesi, semester: newSemester });\n                        }\n                    });\n                    let string = JSON.stringify(newEntityDataObjek);\n                    let object = JSON.parse(string);\n                    setEntityData(() => {\n                        // if (object[0]['nama_subjek']!==undefined && object[0]['nama_subjek']!==undefined){\n                        changeSesiSemester(currentIndex, object);\n                        return object;\n                        // }\n                        // else{\n                        //     return [];\n                        // }\n                    })\n                })\n            // won't work: setSync is asynchronous. You gotta use other letiables\n            // changeSesiSemester(0);\n            // setSesiSemester(newSesiSemester);\n        }\n        if (!Object.is(ruangInfo, undefined)) {\n            let url=`http://web.fc.utm.my/ttms/web_man_webservice_json.cgi?entity=jadual_ruang`\n            url=`${url}&sesi=${ruangInfo.sesi}&semester=${ruangInfo.semester}&kod_ruang=${ruangInfo.kodRuang}`\n            // console.log(url)\n            fetch(url)\n                .then((data) => {\n                    return data.json();\n                })\n                .then((data) => {\n                    setScheduleData( generateScheduleData() );\n                    data.forEach((val) => {\n                        setScheduleData(\n                            produce(newScheduleData => {\n                                let indexHari = parseInt(val['hari']);\n                                let indexMasa = parseInt(val['masa'] - 1);\n                                if (!Object.is(val['subjek'], null)) {\n                                    if (!(isNaN(indexHari) || isNaN(indexMasa))) {\n                                        newScheduleData[indexHari][indexMasa] = {\n                                            subjek: val['subjek']['kod_subjek'],\n                                            seksyen: val['subjek']['seksyen']\n                                        }\n                                    }\n                                }\n                            }))\n                    }\n                    )\n\n                })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ruangInfo])\n\n    return (\n        <>\n            {(entityData.length !== 0 && !Object.is(userInfo, undefined)) &&\n                <Fragment>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"center\"\n                    >\n                        <Typography color=\"primary\">\n                            Showing for: sesi {entityData[currentIndex][0]['sesi']} semester {entityData[currentIndex][0]['semester']}  <br />\n                        </Typography>\n\n                        <Box mt={2}>\n                            <Button variant=\"outlined\" color=\"primary\" aria-controls=\"simple-menu\" aria-haspopup={true} onClick={(event) => {\n                                setAnchorEl(event.currentTarget);\n                            }}>\n                                Change semester\n                        <> </>\n                            </Button>\n                        </Box>\n                    </Grid>\n                </Fragment>\n            }\n            {!Object.is(userInfo, undefined) &&\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={() => {\n                        setAnchorEl(null);\n                    }}\n                >\n                    {/* onClick={() => { changeSesiSemester(index) }} */}\n                    {\n                        entityData.map((value, index) => {\n                            return (\n                                <MenuItem onClick={() => changeSesiSemester(index, entityData)} key={`${index}`}>\n                                    Sesi {value[0]['sesi']}&nbsp; Semester {value[0]['semester']}\n                                </MenuItem>\n                            )\n                        })\n                    }\n                </Menu>\n            }\n            {isAboveMD960 &&\n                <GenerateTimetable scheduleData={scheduleData} isRuangUglyTimetable={isRuangUglyTimetable} />\n            }\n            {isBelowMD960 &&\n                <Fragment>\n                    <Box mt={2}>\n                        <Typography textAlign=\"center\" color=\"textPrimary\">\n                            Morning Classes\n                            </Typography >\n                        <GenerateTimetable scheduleData={scheduleData} isRuangUglyTimetable={isRuangUglyTimetable} startIndex={0} endIndex={5} />\n                    </Box>\n                    <Box mt={2} id=\"night\">\n                        <Typography textAlign=\"center\" color=\"textPrimary\">\n                            Evening Classes\n                            </Typography>\n                        <GenerateTimetable scheduleData={scheduleData} isRuangUglyTimetable={isRuangUglyTimetable} startIndex={7} endIndex={13} />\n                    </Box>\n                </Fragment>\n            }\n\n            <div>\n                <Box fontSize={10}>\n                    Each table cell will show: <br />\n                    <Box>\n                        [Subject-Section] <br />[Room Name]\n                    </Box>\n                </Box>\n            </div>\n        </>\n    )\n}\n\nexport default TimeTable\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectSesiMasuk } from '../components/TableDataSlice';\nimport TableData from '../components/TableData'\n\nexport function Kurikulum() {\n    let entity1 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 0,\n        entity: \"kurikulum\",\n        args: [],\n        arrayDropdownColumns: [\"sesi_masuk\"],\n        arrayOtherColumns: [],\n        arraySelectIds: [],\n        lengthToShow: -1\n    }\n    // after redux dispatch entity2 of the parent will get changed. \n    // but the child of this parent needs 2 changes to get correct props\n    // DOM is re-rendered only once however as parent re-renders only once\n    // so child must use it useEffect() which will render twice\n\n    let { sesi_masuk } = useSelector(selectSesiMasuk);\n    let entity2 = {\n        url:\"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 1,\n        entity: \"kurikulum\",\n        args: [{ name: \"cohort\", value: sesi_masuk }],\n        arrayColumns: [\"tahun_masuk\", \"sesi_masuk\", \"kod_kurikulum\", \"id_kurikulum\", \"nama_kurikulum\"],\n        arraySelectIds: [],\n        lengthToShow: 10\n    }\n\n    return (\n        <>\n            <>\n                <TableData\n                    entityInfo={entity1}\n                    isDropDown={true}\n                    tableNum={1}\n                />\n                <TableData\n                    entityInfo={entity2}\n                    isTable={true}\n                    tableNum={2}\n                    willActionOccur={true}\n                />\n            </>\n        </>\n    )\n\n}\n    // kurikulum-->id_kurikulum \n    // gives next page =>\n    // kurikulum_subjek-->id_kurikulum_subjek\n    // gives next page=>\n    // kurikulum_subjek_elektif\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectIdKurikulumSubjek } from '../components/TableDataSlice';\nimport TableData from '../components/TableData';\nimport { TextField } from '@material-ui/core';\n\nfunction KurikulumSubjek() {\n  \n    const [id_kurikulum_subjek, setId_kurikulum_subjek] = useState(useSelector(selectIdKurikulumSubjek));\n    const url = \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\";\n    let entity1 = {\n        url,\n        argNum: 1,\n        entity: \"kurikulum_subjek_elektif\",\n        args: [{ name: \"id_kurikulum_subjek\", value: id_kurikulum_subjek }],\n        arrayColumns: [\n            \"s.nama_subjek\",\n            \"s.kredit\",\n            \"se.kod_subjek\"\n        ],\n        arraySelectIds: [\"id_kurikulum_subjek\"],\n        lengthToShow: 10\n    }\n\n    return (\n        <>\n\n            <TextField className=\"some-margin\"\n             onChange={(event) => { setId_kurikulum_subjek(event.currentTarget.value) }} \n             variant=\"outlined\" \n            //  value={id_kurikulum}\n             label=\"ID Kurikulum Subjek\"\n             value={id_kurikulum_subjek} \n            />\n            <TableData\n                entityInfo={entity1}\n                isTable={true}\n                tableNum={1}\n                willTitleOccur={false}\n            />\n\n        </>\n    )\n}\n\nexport default KurikulumSubjek\n","import {  Divider } from '@material-ui/core';\nimport React from 'react'\nimport TableData from '../components/TableData';\n\nfunction Ruang() {\n    let entity2 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 1,\n        entity: \"ruang\",\n        args: [{ name: \"kod_fakulti\", value: \"FSKSM\" }],\n        arrayColumns: [\n            \"nama_ruang_singkatan\",\n            \"nama_ruang\",\n            \"kod_jabatan\",\n            \"kapasiti\",\n            \"kod_ruang\"\n        ],\n        arraySelectIds: [],\n        lengthToShow: 10\n    }\n\n\n    return (\n        <>\n            <TableData\n                entityInfo={entity2}\n                isTable={true}\n                tableNum={1}\n                willActionOccur={true}\n            />\n\n            <Divider />\n            {/* <Grid container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"center\"\n            >\n                <Grid item md={6}>\n                    <Typography color=\"primary\"> kod fakulti &nbsp;\n                    <Input margin=\"dense\" name=\"kod_fakulti\" onChange={(event) => { handleInputChange(event) }}\n                            placeholder={`${kod_fakulti}`} />\n                    </Typography>\n                </Grid>\n                <Grid item md={6}>\n                    <Typography color=\"primary\"> kod ruang like  &nbsp;\n                    <Input margin=\"dense\" name=\"kod_ruang_like\" onChange={(event) => { handleInputChange(event) }}\n                            placeholder={`${kod_ruang_like}`} />\n                    </Typography>\n                </Grid> \n            </Grid>*/}\n\n            {/* <TableData\n                    entityInfo={entity1}\n                    isTable={true}\n                    tableNum={1}\n                /> */}\n\n\n\n        </>\n    )\n}\n\nexport default Ruang\n\n","import React, { Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useSelector } from 'react-redux';\nimport { selectAuthUser } from '../pages/SignInUpSlice';\nimport { Divider } from '@material-ui/core';\n\nexport function Info() {\n    return (\n        <>\n            <UserInfo />\n        </>\n    )\n}\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: '100%',\n        padding: '0vh',\n        margin: '0vh'\n    },\n    \"@media screen and (max-height: 960px)\": {\n        root: {\n            padding: \"0px\",\n            margin: \"0px\",\n        },\n        smallText: {\n            fontSize: \"0.2em\",\n        }\n    }\n}));\n\n\nexport default function UserInfo({ dense = false }) {\n    const classes = useStyles();\n    let { loginName: login_name, fullName: full_name, description, profession } = useSelector(selectAuthUser);\n    let userInfo = { login_name, full_name, description, profession };\n    return (\n        <div className={`some-margin ${classes.root}}`}>\n            <List dense={dense} disablePadding={true} aria-label=\"main mailbox folders\">\n                {\n                    Object.entries(userInfo).map((val, index) => {\n                        let [property, objectValue] = val;\n                        return (\n                            <Fragment key={`object ${index}`}>\n                                <ListItem className={classes.root}>\n                                    <ListItemText className={classes.smallText}>\n                                        {property.replace(/_/g, \" \").replace(/\\w\\S*/g, (w) => (w.replace(/^\\w/, (c) => c.toUpperCase())))}\n                                        : {objectValue}\n                                    </ListItemText>\n                                </ListItem>\n                            </Fragment>\n                        );\n                    })\n                }\n\n            </List>\n            <br />\n            <Divider />\n        </div>\n    );\n}\n\n\n\n","import React from 'react'\nimport UserInfo from '../components/Info'\nimport TableData from '../components/TableData'\n\nfunction Profile({ profession, loginName, isAdmin=false }) {\n    let entityStudent = null;\n    let entityTeacher = null;\n    entityStudent={\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 1,\n        entity: \"pelajar_subjek\",\n        args: [{ name: \"no_matrik\", value: loginName }],\n        arrayColumns: [ \"sesi\",\"semester\", \"kod_subjek\", \"nama_subjek\", \"seksyen\", \"tahun_kursus\"],\n        arraySelectIds: [],\n        lengthToShow: 10\n    }\n    \n    // copy objects effortlessly\n    entityTeacher= {...entityStudent,\n        entity: \"pensyarah_subjek\",\n        args: [{ name: \"no_pekerja\", value: loginName }],\n        arrayColumns: [ \"sesi\",\"semester\", \"kod_subjek\", \"nama_subjek\", \"seksyen\", \"bil_pelajar\", \"kod_fakulti\"] \n    }\n\n\n    if ((profession === \"Student\" || profession === \"Teacher\" )) {\n        return (\n            <>\n                { !isAdmin &&\n                <UserInfo />\n                }\n                { (profession === \"Student\")\n                    &&\n                    <>\n                        <TableData entityInfo={entityStudent} isTable={true} tableNum={1} />\n\n                    </>\n                }\n                { (profession === \"Teacher\")\n                    &&\n                    <>\n                        <TableData entityInfo={entityTeacher} isTable={true} tableNum={2} />\n                    </>\n                }\n            </>\n        )\n    }\n    else {\n        return <div>We'll kill you, hacker</div>\n    }\n}\n\nexport default Profile\n\n\n    // ?entity=k&no_matrik=A18CS3026\n    //   \"sesi\":\"2020/2021\",\n    //   \"\":5,\n    //   \"\":\"SCSJ3104\",\n    //   \"\":2,\n    //   \"nama_subjek\":\"Pembangunan Aplikasi\",\n    //   \"status\":\"-\",\n    //   \"\":1,\n","// Redundant: can be improved! Need \n// arrayColumns: [\"nama_subjek\", \"kod_subjek\", \"bil_pelajar\", \"bil_pensyarah\", \"bil_seksyen\"],  // same as that one:\"seksyen_list\":null\n// Needs just one more columns     \nimport React from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectSesiSemester } from '../components/TableDataSlice';\nimport TableData from '../components/TableData'\n\nfunction SubjekSeksyen() {\n\n    let entity1 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 0,\n        entity: \"sesisemester\",\n        args: [],\n        arrayDropdownColumns: [\"sesi\", \"semester\"],\n        arrayOtherColumns: [\"sesi_semester_id\", \"tarikh_mula\", \"tarikh_tamat\"],\n        arraySelectIds: [],\n        lengthToShow: -1\n    }\n    // after redux dispatch entity2 of the parent will get changed. \n    // but the child of this parent needs 2 changes to get correct props\n    // DOM is re-rendered only once however as parent re-renders only once\n    // so child must use it useEffect() which will render twice\n    let { sesi, semester } = useSelector(selectSesiSemester);\n    \n    let entity2 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 2,\n        entity: \"subjek_seksyen\",\n        args: [{ name: \"sesi\", value: sesi }, { name: \"semester\", value: semester }],\n        arrayColumns: [\n            \"nama_subjek\",\n            \"bil_pelajar\",\n            \"bil_pensyarah\",\n            \"kod_subjek\",\n            \"bil_seksyen\",\n        ],\n        accordionColumns: [\n            \"seksyen\",\n            \"bil_pelajar\",\n            \"pensyarah\"\n        ],\n        arraySelectIds: [],\n        lengthToShow: 10\n    }\n    return (\n        <>\n            <TableData\n                entityInfo={entity1}\n                isDropDown={true}\n                tableNum={1}\n            />\n\n            <TableData\n                entityInfo={entity2}\n                isAccordion={true}\n                tableNum={2}\n            />\n        </>\n    )\n\n}\n\nexport default SubjekSeksyen\n","import React from 'react'\nimport TimeTable from './StudentTimeTable'\nimport { useSelector } from 'react-redux';\nimport { selectSesiSemester } from '../components/TableDataSlice';\nimport { selectKodRuang } from '../components/TableDataSlice';\nimport TableData from '../components/TableData'\nimport { Typography } from '@material-ui/core';\n\nfunction RuangTimetable() {\n    const url = \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\"\n    let entity1 = {\n        url,\n        argNum: 0,\n        entity: \"sesisemester\",\n        args: [],\n        arrayDropdownColumns: [\"sesi\", \"semester\"],\n        arrletayOtherColumns: [\"sesi_semester_id\", \"tarikh_mula\", \"tarikh_tamat\"],\n        arraySelectIds: [],\n        lengthToShow: -1\n    }\n    let { sesi, semester } = useSelector(selectSesiSemester);\n    let { kodRuang } = useSelector(selectKodRuang);\n    let ruangInfo={sesi, semester, kodRuang}\n    // console.log(ruangInfo)\n    return (\n        <>\n            <TableData\n                entityInfo={entity1}\n                isDropDown={true}\n                tableNum={1}\n            />\n            <div className=\"some-margin\">\n            <Typography variant=\"h5\">\n                Ruang: {kodRuang}, Sesi: {sesi}, Semester: {semester}\n            </Typography>\n            </div>\n            {// HTML won't be re-rendered if object's properties change.\n            //  <TimeTable ruangInfo={{ sesi, semester, kod_ruang: \"N28-105-01\" }} isAbbrev={false} />\n            } \n            <TimeTable ruangInfo={ruangInfo} isRuangUglyTimetable={true} />\n        </>\n    )\n}\n\nexport default RuangTimetable\n","import { TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectIdKurikulum } from '../components/TableDataSlice';\nimport TableData from '../components/TableData';\n\nfunction KurikulumElektif() {\n\n    const [id_kurikulum] = useState(useSelector(selectIdKurikulum));\n    const url = \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\"\n    let entity1 = {\n        url,\n        argNum: 1,\n        entity: \"kurikulum_subjek\",\n        args: [{ name: \"id_kurikulum\", value: id_kurikulum }],\n        arrayColumns: [\n            \"id_kurikulum_subjek\",\n            \"nama_subjek\",\n            \"kod_subjek\",\n            \"semester_ambil\",\n            \"tahun_ambil\",\n            \"kredit\",\n        ],\n        arraySelectIds: [\"id_kurikulum\"],\n        lengthToShow: 10\n    }\n\n    return (\n        <>\n            <TextField className=\"some-margin\"\n                variant=\"outlined\" \n                value={id_kurikulum}\n                label=\"ID Kurikulum\"\n            />\n            <TableData\n                entityInfo={entity1}\n                isTable={true}\n                tableNum={1}\n                willActionOccur={true}\n            />\n        </>\n    )\n}\n\nexport default KurikulumElektif\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectSesiSemester, selectSubjekPensyarah } from '../components/TableDataSlice';\nimport TableData from '../components/TableData'\n\nfunction SubjekPensyarah() {\n    let entity1 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 0,\n        entity: \"sesisemester\",\n        args: [],\n        arrayDropdownColumns: [\"sesi\", \"semester\"],\n        arrayOtherColumns: [\"sesi_semester_id\", \"tarikh_mula\", \"tarikh_tamat\"],\n        arraySelectIds: [],\n        lengthToShow: -1\n    }\n\n    let { sesi, semester } = useSelector(selectSesiSemester);\n    let { kodSubjek, seksyen } = useSelector(selectSubjekPensyarah);\n\n    let entity2 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 2,\n        entity: \"subjek_pensyarah\",\n        args: [\n        { name: \"kod_subjek\", value: kodSubjek },\n        { name: \"sesi\", value: sesi },\n        { name: \"semester\", value: semester }, \n        { name: \"seksyen\", value: seksyen }\n        ],\n        arrayColumns: [\n            \"semester\",\n            \"seksyen\",\n            \"nama\",\n            \"sesi\"\n        ],\n        arraySelectIds: [],\n        lengthToShow: 10\n    };\n\n    return (\n        <>\n            <TableData\n                entityInfo={entity1}\n                isDropDown={true}\n                tableNum={1}\n            />\n\n            <TableData\n                entityInfo={entity2}\n                isTable={true}\n                tableNum={2}\n            />\n        </>\n    )\n\n}\n\nexport default SubjekPensyarah\n","import React from 'react'\nimport { selectAdminSessionId } from '../pages/SessionIdSlice';\nimport { useSelector } from 'react-redux';\nimport { selectSesiSemester, selectSubjekPelajar } from '../components/TableDataSlice';\nimport TableData from '../components/TableData'\n\nfunction SubjekPelajar() {\n    let entity1 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 0,\n        entity: \"sesisemester\",\n        args: [],\n        arrayDropdownColumns: [\"sesi\", \"semester\"],\n        arrayOtherColumns: [\"sesi_semester_id\", \"tarikh_mula\", \"tarikh_tamat\"],\n        arraySelectIds: [],\n        lengthToShow: -1\n    }\n\n    let { sesi, semester } = useSelector(selectSesiSemester);\n    let { kodSubjek, seksyen } = useSelector(selectSubjekPelajar);\n    let adminSessionId  = useSelector(selectAdminSessionId);\n    \n    // http://web.fc.utm.my/ttms/web_man_webservice_json.cgi?entity=subjek_pelajar\n    // &session_id=???&sesi=2019/2020&semester=2&kod_subjek=SCSJ2253&seksyen=2\n\n    // session id \n    // http://web.fc.utm.my/ttms/web_man_webservice_json.cgi?entity=authentication&login=ad2021&password=scsx3104\n\n    let entity2 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 5,\n        entity: \"subjek_pelajar\",\n        args: [\n            // session_id=???&\n            // sesi=yyyy/yyyy&\n            // semester=[1|2]&\n            // kod_subjek=???\n            // &seksyen=???\n            { name: \"session_id\", value: adminSessionId },\n            { name: \"sesi\", value: sesi },\n            { name: \"semester\", value: semester },\n            { name: \"kod_subjek\", value: kodSubjek },\n            { name: \"seksyen\", value: seksyen }\n        ],\n\n        arrayColumns: [\n            \"kod_fakulti\",\n            \"nama\",\n            \"kod_kursus\",\n            \"no_kp\",\n            \"status\",\n            \"tahun_kursus\"\n        ],\n        arraySelectIds: [],\n        lengthToShow: 10\n    };\n\n    return (\n        <>\n            <TableData\n                entityInfo={entity1}\n                isDropDown={true}\n                tableNum={1}\n            />\n\n            <TableData\n                className=\"some-top-margin\"\n                entityInfo={entity2}\n                isTable={true}\n                tableNum={2}\n                willTitleOccur={true}\n            />\n        </>\n    )\n}\n\nexport default SubjekPelajar\n","import React from 'react'\nimport { selectAdminSessionId } from '../pages/SessionIdSlice';\nimport { useSelector } from 'react-redux';\nimport { selectSesiSemester } from '../components/TableDataSlice';\nimport TableData from '../components/TableData'\n\nfunction Pensyarah() {\n    let entity1 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 0,\n        entity: \"sesisemester\",\n        args: [],\n        arrayDropdownColumns: [\"sesi\", \"semester\"],\n        arrayOtherColumns: [\"sesi_semester_id\", \"tarikh_mula\", \"tarikh_tamat\"],\n        arraySelectIds: [],\n        lengthToShow: -1\n    }\n\n    // http://web.fc.utm.my/ttms/web_man_webservice_json.cgi?entity=pensyarah&session_id=480216810538698&sesi=2019/2020&semester=1\n\n    let { sesi, semester } = useSelector(selectSesiSemester);\n    let adminSessionId = useSelector(selectAdminSessionId);\n\n    let entity2 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 3,\n        entity: \"pensyarah\",\n        args: [\n            { name: \"session_id\", value: adminSessionId },\n            { name: \"sesi\", value: sesi },\n            { name: \"semester\", value: semester },\n        ],\n        arrayColumns: [\n            \"bil_seksyen\",\n            \"bil_subjek\",\n            \"no_pekerja\",\n            \"bil_pelajar\",\n            \"nama\"\n        ],\n        arraySelectIds: [],\n        lengthToShow: 10\n    };\n\n    return (\n        <>\n            <TableData\n                entityInfo={entity1}\n                isDropDown={true}\n                tableNum={1}\n            />\n            \n            <br />\n           \n            <TableData\n                entityInfo={entity2}\n                isTable={true}\n                tableNum={2}\n            />\n        </>\n    )\n\n}\n\nexport default Pensyarah\n\n/*\n\n*/","import React, { useState } from 'react'\nimport { selectAdminSessionId } from '../pages/SessionIdSlice';\nimport { useSelector } from 'react-redux';\nimport { selectSesiSemester, selectOffset, selectLimit, setLimit, setOffset } from '../components/TableDataSlice';\nimport TableData from '../components/TableData'\nimport Button from '@material-ui/core/Button';\nimport { Input } from '@material-ui/core';\n\nfunction Pelajar() {\n\n    let entity1 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 0,\n        entity: \"sesisemester\",\n        args: [],\n        arrayDropdownColumns: [\"sesi\", \"semester\"],\n        arrayOtherColumns: [\"sesi_semester_id\", \"tarikh_mula\", \"tarikh_tamat\"],\n        arraySelectIds: [],\n\n    }\n\n    // pelajar   -> entity=pelajar&session_id=???&sesi=yyyy/yyyy&semester=[1|2]&limit=num_&offset=num_\n\n    let { sesi, semester } = useSelector(selectSesiSemester);\n    let adminSessionId = useSelector(selectAdminSessionId);\n    let [limit, setLimit2] = useState(useSelector(selectLimit));\n    let [offset, setOffset2] = useState(useSelector(selectOffset));\n\n    let entity2 = {\n        url: \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\",\n        argNum: 5,\n        entity: \"pelajar\",\n        args: [\n            { name: \"session_id\", value: adminSessionId },\n            { name: \"sesi\", value: sesi },\n            { name: \"semester\", value: semester },\n            { name: \"limit\", value: limit },\n            { name: \"offset\", value: offset },\n        ],\n        arrayColumns: [\n            \"kod_fakulti\",\n            \"kod_kursus\",\n            \"nama\",\n            \"no_matrik\",\n            \"tahun_kursus\"\n        ],\n        arraySelectIds: [],\n        lengthToShow: 10\n    };\n\n    return (\n        <>\n            <TableData\n                entityInfo={entity1}\n                isDropDown={true}\n                tableNum={1}\n            />\n\n            <br />\n\n            <div className=\"paginationDiv\">\n                <div>\n                    [{offset}...{limit} items] &nbsp; &nbsp;\n                    Limit &nbsp;\n                    <select\n                        value={limit}\n                        onChange={(event) => {\n                            let selectValue = parseInt(event.target.value);\n                            setLimit(selectValue);\n                            setLimit2(selectValue);\n                        }}\n                    >\n                        <option> 10 </option>\n                        <option> 25 </option>\n                        <option> 50 </option>\n                        <option> 100 </option>\n                    </select>\n                        &nbsp;\n                        items.  &nbsp; &nbsp;\n                    </div>\n                <div className=\"paginationDivWrapper\">\n                    <form>\n                        <Input size=\"small\" id=\"inputOffset\" label=\"Standard\" />\n                        <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                                let inputElement = document.getElementById('inputOffset');\n\n                                let inputValue = inputElement.value;\n                                if (inputValue.trim() !== \"\") {\n                                    setOffset(parseInt(inputValue));\n                                    setOffset2(parseInt(inputValue));\n                                }\n                            }}\n                        >Set Offset</Button>\n                        <Button\n                            size=\"small\"\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            onClick={() => { setOffset(offset + 100); setOffset2(offset + 100) }}\n                        >Next 100</Button>\n                        <Button\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={() => { setOffset(offset + 200); setOffset2(offset + 200) }}\n                        >Next 200</Button>\n                    </form>\n\n                </div>\n            </div>\n\n            <TableData\n                entityInfo={entity2}\n                isTable={true}\n                tableNum={2}\n\n            />\n        </>\n    )\n\n}\n\nexport default Pelajar\n\n/*\n\n*/\n\n","import { TextField } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport TableData from '../components/TableData';\n\nfunction PensyarahSubjek() {\n\n    const [no_pekerja, setNo_pekerja] = useState(\"27474\");\n    const url = \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\"\n    let entity1 = {\n        url,\n        argNum: 1,\n        entity: \"pensyarah_subjek\",\n        args: [{ name: \"no_pekerja\", value: no_pekerja }],\n        arrayColumns: [\n            \"sesi\",\n            \"semester\",\n            \"kod_subjek\",\n            \"nama_subjek\", \n           \"seksyen\",\n            \"bil_pelajar\",\n        ],\n        arraySelectIds: [\"no_pekerja\"],\n        lengthToShow: 10\n    }\n\n    return (\n        <>\n\n            <TextField className=\"some-margin\"\n                onChange={(event) => { setNo_pekerja(event.currentTarget.value) }}\n                variant=\"outlined\" \n                value={no_pekerja}\n                label=\"No. Pekerja\"\n            />\n            <TableData\n                entityInfo={entity1}\n                isTable={true}\n                tableNum={1}\n                willTitleOccur={false}\n            />\n        </>\n    )\n}\n\nexport default PensyarahSubjek\n","import { TextField } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport TableData from '../components/TableData';\n\nfunction PelajarSubjek() {\n\n    const [no_matrik, setNo_matrik] = useState(\"B19EC0032\");\n    const url = \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\"\n    let entity1 = {\n        url,\n        argNum: 1,\n        entity: \"pelajar_subjek\",\n        args: [{ name: \"no_matrik\", value: no_matrik }],\n        arrayColumns: [\n            \"nama_subjek\",\n            \"kod_subjek\",\n            \"tahun_kursus\",\n            \"semester\",\n            \"sesi\",\n            \"seksyen\"\n        ],\n        arraySelectIds: [\"no_matrik\"],\n        lengthToShow: 10\n    }\n\n    return (\n        <>\n\n            <TextField className=\"some-margin\"\n                onChange={(event) => { setNo_matrik(event.currentTarget.value) }}\n                variant=\"outlined\"\n                value={no_matrik}\n                label=\"No. Matrik\"\n            />\n            <TableData\n                entityInfo={entity1}\n                isTable={true}\n                tableNum={1}\n                willTitleOccur={false}\n            />\n        </>\n    )\n}\n\nexport default PelajarSubjek\n","import React from 'react'\nimport Component from \"react-component-component\";\nimport { Chart } from \"react-google-charts\";\n\n\n// function SectionVs\n\nfunction GraphComponents({ xAxis, yAxis, height, sesi, semester} ) {\n\n  let url=\"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi?\";\n  url = `${url}entity=subjek&sesi=${sesi}&semester=${semester}`;\n  // console.log({semester, sesi})\n  // var newitem = [value['kod_subjek'], Number(vaule['bil_seksyen'])];\n  return (\n    <div className=\"googleCharts\">\n      <Component\n        initialState={{ dataLoadingStatus: 'loading', chartData: [] }}\n        didMount={async function (component) {\n          const response = await fetch(url);\n          const json = await response.json();\n          // console.log(json)\n          // const rateCurrencyNames = Object.keys(json.rates)\n          // const rateCurrencyValues = Object.values(json.rates)\n          const chartData = [[xAxis, yAxis]]\n          json.forEach((value)=>{\n            chartData.push([value[xAxis], value[yAxis]])\n          })\n          component.setState({\n            dataLoadingStatus: 'ready',\n            chartData: chartData,\n          })\n        }}\n      >\n        {component => {\n          return component.state.dataLoadingStatus === 'ready' ? (\n            <Chart\n              chartType=\"BarChart\"\n              data={component.state.chartData}\n              options={{\n                height,\n                title: `Number of Student in Each Subject for ${sesi}, sem ${semester}`,\n                chartArea: {top:20,width:\"50%\", height:\"80%\"},\n                hAxis: {\n                  title: yAxis,\n                  minValue: 0\n                },\n                vAxis: {\n                  title: xAxis\n                }\n              }}\n              rootProps={{ 'data-testid': '1' }}\n            />\n          ) : (\n              <div>Fetching data from API</div>\n            )\n        }}\n      </Component>   \n       </div>\n  )\n}\n\nexport default GraphComponents\n","import React, { useState } from 'react'\nimport TableData from '../components/TableData'\nimport { useSelector } from 'react-redux';\nimport { selectSesiSemester } from '../components/TableDataSlice';\nimport UserInfo from '../components/Info';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\nimport GraphComponents from '../components/GraphComponents';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: \"100%\",\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\n\nfunction AdminGraph({ sesi, semester, graphType }) {\n    let [willShowGraph] = useState(true);\n    if (willShowGraph) {\n        if (graphType === \"bil_pelajar\") {\n            return (\n                <>\n                    <GraphComponents xAxis='kod_subjek' yAxis='bil_pelajar' height={800} sesi={sesi} semester={semester} />\n                </>\n            );\n        }\n        else if (graphType === \"bil_seksyen\") {\n            return (\n                <>\n                    <GraphComponents xAxis='kod_subjek' yAxis='bil_seksyen' height={460} sesi={sesi} semester={semester} />\n                </>\n            );\n        }\n        else if (graphType === \"bil_pensyarah\") {\n            return (\n                <>\n                    <GraphComponents xAxis='kod_subjek' yAxis='bil_pensyarah' height={800} sesi={sesi} semester={semester} />\n                </>\n            );\n        }\n    }\n    else {\n        return null;\n    }\n}\n\n\nexport default function AdminProfile() {\n    const classes = useStyles();\n    const [willShowFirst, setWillShowFirst] = useState(false);\n    const [willShowSecond, setWillShowSecond] = useState(false);\n    const [willShowThird, setWillShowThird] = useState(false);\n    let { sesi, semester } = useSelector(selectSesiSemester);\n    const url = \"http://web.fc.utm.my/ttms/web_man_webservice_json.cgi\"\n    let entity1 = {\n        url,\n        argNum: 0,\n        entity: \"sesisemester\",\n        args: [],\n        arrayDropdownColumns: [\"sesi\", \"semester\"],\n        arrletayOtherColumns: [\"sesi_semester_id\", \"tarikh_mula\", \"tarikh_tamat\"],\n        arraySelectIds: [],\n        lengthToShow: -1\n    }\n    return (\n        <>\n            <br/>\n            <br/>\n            <Typography variant=\"h5\" color=\"primary\">\n                User Details\n            </Typography>\n            <UserInfo />\n            <br />\n            <Grid container direction=\"row\" justify=\"space-around\" alignItems=\"center\">\n                <Grid item md={8} xs={12}>\n                    <Typography variant=\"h5\" color=\"primary\">\n                        Usage Reports and statistics\n                    </Typography>\n                </Grid>\n                <div className=\"md-above-invisible\"><br/></div>\n                <Grid item md={4} xs={12}>\n                    <TableData\n                        entityInfo={entity1}\n                        isDropDown={true}\n                        tableNum={1}\n                        willTitleOccur={false}\n                    />\n                </Grid>\n            </Grid>\n            <div className={classes.root}>\n                <br />\n             \n                <List dense={true} component=\"nav\" aria-label=\"main mailbox folders\">\n                    <ListItem button onClick={() => { setWillShowFirst(!willShowFirst) }}>\n                        <ListItemIcon>\n                            <MultilineChartIcon />\n                        </ListItemIcon>\n                        <ListItemText> Bil Pelajar: Show data for the number of students in each subject.\n                        <Button onClick={() => { setWillShowFirst(!willShowFirst) }}>\n                                {willShowFirst ? <ExpandLess /> : <ExpandMore />}\n                            </Button>\n                        </ListItemText>\n                    </ListItem>\n                    {\n                        willShowFirst &&\n                        <AdminGraph sesi={sesi} semester={semester} graphType=\"bil_pelajar\" />\n                    }\n\n                    <ListItem button onClick={() => { setWillShowSecond(!willShowSecond) }}>\n                        <ListItemIcon>\n                            <MultilineChartIcon />\n                        </ListItemIcon>\n                        <ListItemText> Bil Pensyarah: Show data for the number of teachers in each subject.\n                        <Button onClick={() => { setWillShowSecond(!willShowSecond) }}>\n                                {willShowSecond ? <ExpandLess /> : <ExpandMore />}\n                            </Button>\n                        </ListItemText>\n                    </ListItem>\n                    {\n                        willShowSecond &&\n                        <AdminGraph sesi={sesi} semester={semester} graphType=\"bil_pensyarah\" />\n                    }\n\n                    <ListItem button onClick={() => { setWillShowThird(!willShowThird) }}>\n                        <ListItemIcon>\n                            <MultilineChartIcon />\n                        </ListItemIcon>\n                        <ListItemText> Bil Seksyen: Show data for the number of sections in each subject.\n                        <Button onClick={() => { setWillShowThird(!willShowThird) }}>\n                                {willShowThird ? <ExpandLess /> : <ExpandMore />}\n\n                            </Button>\n                        </ListItemText>\n                    </ListItem>\n                    {\n                        willShowThird &&\n                        <AdminGraph sesi={sesi} semester={semester} graphType=\"bil_seksyen\" />\n                    }\n\n                </List>\n               \n            </div>\n\n        </>\n    )\n}\n\n\n\n// That means you need to call this function this.props.history.goBack(); inside the component that is wrapped by < Route/>\n\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport \"./NotFound.css\"\n\nfunction NotFound() {\n    const history= useHistory();\n    return (\n        <div className=\"container\">\n            <h2>Oops! Page not found.</h2>\n            <h1>404</h1>\n            <p>We can't find the page you're looking for.</p>\n            <span className=\"spanBackButton\" onClick={()=>{history.push(\"/\")}} >Go back home</span>\n        </div>\n    )\n}\n\nexport default NotFound\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Subjek from './pages/Subjek';\r\nimport SesiSemester from './pages/SesiSemester';\r\nimport DrawerObject from './components/DrawerObject';\r\nimport SignInUp from \"./pages/SignInUp\"\r\nimport StudentTimeTable from './pages/StudentTimeTable';\r\nimport { Kurikulum } from './pages/Kurikulum';\r\nimport KurikulumElektif from './pages/KurikulumElektif';\r\nimport Ruang from './pages/Ruang';\r\nimport Profile from './pages/Profile';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectAuthUser } from './pages/SignInUpSlice';\r\nimport { setAdminSessionId, setAdminSessionIdSync } from \"./pages/SessionIdSlice\";\r\nimport { getLengthToShow } from \"./components/helper\"\r\nimport { setLengthToShow } from './components/TableDataSlice';\r\nimport SubjekSeksyen from './pages/SubjekSeksyen';\r\nimport RuangTimetable from './pages/RuangTimetable';\r\nimport KurikulumSubjek from './pages/KurikulumSubjek';\r\nimport SubjekPensyarah from './pages/SubjekPensyarah';\r\nimport SubjekPelajar from './pages/SubjekPelajar';\r\nimport Pensyarah from './pages/Pensyarah';\r\nimport Pelajar from './pages/Pelajar';\r\nimport PensyarahSubjek from './pages/PensyarahSubjek';\r\nimport PelajarSubjek from './pages/PelajarSubjek';\r\nimport AdminProfile from './pages/AdminProfile';\r\nimport NotFound from './pages/NotFound';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { blue, red } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // Purple and green play nicely together.\r\n      main: blue[500],\r\n    },\r\n    secondary: {\r\n      // This is green.A700 as hex.\r\n      main: red[500],\r\n    },\r\n    contrastThreshold: 3,\r\n    tonalOffset: 0.1\r\n  },\r\n});\r\n\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '1.4rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '0.8rem',\r\n  },\r\n  [theme.breakpoints.up('sm')]: {\r\n    fontSize: '1.4rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2.4rem',\r\n  },\r\n};\r\n\r\ntheme.typography.h2 = {\r\n  fontSize: '1.4rem',\r\n  '@media (min-width:600px)': {\r\n    fontSize: '0.8rem',\r\n  },\r\n  [theme.breakpoints.up('sm')]: {\r\n    fontSize: '1.4rem',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '2.4rem',\r\n  },\r\n};\r\n\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  // const appDispatch = useAppDispatch();\r\n  let authUser = useSelector(selectAuthUser);\r\n  // let adminSessionId = useState(selectAdminSessionId);\r\n  let { profession, loginName } = authUser;\r\n\r\n  const handleSession = async () => {\r\n    await dispatch(setAdminSessionId())\r\n  }\r\n  // handleSession();\r\n\r\n  useEffect(() => {\r\n    // console.log({ profession });\r\n    if (profession !== \"Admin\") { handleSession(); }\r\n    else { setAdminSessionIdSync(JSON.parse(localStorage.getItem('auth_admin')).session_id) }\r\n    setLengthToShow(getLengthToShow());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <ThemeProvider theme={theme}>\r\n\r\n      {Object.is(profession, null) &&\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <SignInUp action=\"Log in\" actionIsSignIn={true} />\r\n          </Route>\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      }\r\n\r\n      {\r\n        !Object.is(profession, null) &&\r\n        <>\r\n          <DrawerObject professionString={profession}>\r\n            {/* <Switch> */}\r\n            {/* switch's direct child must be route */}\r\n            {\r\n              Object.is(profession, \"Admin\") &&\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <AdminProfile />\r\n                </Route>\r\n                <Route exact path=\"/subjek\">\r\n                  <Subjek />\r\n                </Route>\r\n                <Route exact path=\"/pensyarah\">\r\n                  <Pensyarah />\r\n                </Route>\r\n                <Route exact path=\"/pelajar\">\r\n                  <Pelajar />\r\n                </Route>\r\n                <Route exact path=\"/pelajar_subjek\">\r\n                  <PelajarSubjek />\r\n                </Route>\r\n                <Route exact path=\"/pensyarah_subjek\">\r\n                  <PensyarahSubjek />\r\n                </Route>\r\n                <Route exact path=\"/subjek_seksyen\">\r\n                  <SubjekSeksyen />\r\n                </Route>\r\n                <Route exact path=\"/subjek_pensyarah\">\r\n                  <SubjekPensyarah />\r\n                </Route>\r\n                <Route exact path=\"/subjek_pelajar\">\r\n                  <SubjekPelajar />\r\n                </Route>\r\n                <Route exact path=\"/sesisemester\">\r\n                  <SesiSemester />\r\n                </Route>\r\n                <Route exact path=\"/kurikulum\">\r\n                  <Kurikulum />\r\n                </Route>\r\n                <Route exact path=\"/kurikulum_elektif\">\r\n                  <KurikulumElektif />\r\n                </Route>\r\n                <Route exact path=\"/kurikulum_subjek\">\r\n                  <KurikulumSubjek />\r\n                </Route>\r\n                <Route exact path=\"/ruang\">\r\n                  <Ruang />\r\n                </Route>\r\n                <Route exact path=\"/ruang_timetable\">\r\n                  <RuangTimetable />\r\n                </Route>\r\n                <Route component={NotFound} />\r\n\r\n              </Switch>\r\n            }\r\n            {\r\n              Object.is(profession, \"Student\") &&\r\n              <Switch>\r\n                <Route exact path=\"/timetable\">\r\n                  <StudentTimeTable userInfo={authUser} />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                  <Profile profession={profession} loginName={loginName} />\r\n                </Route>\r\n                <Route exact path=\"/subjek_seksyen\">\r\n                  <SubjekSeksyen />\r\n                </Route>\r\n                <Route exact path=\"/subjek_pensyarah\">\r\n                  <SubjekPensyarah />\r\n                </Route>\r\n                <Route exact path=\"/subjek_pelajar\">\r\n                  <SubjekPelajar />\r\n                </Route>\r\n                <Route exact path=\"/kurikulum\">\r\n                  <Kurikulum />\r\n                </Route>\r\n                <Route exact path=\"/kurikulum_elektif\">\r\n                  <KurikulumElektif />\r\n                </Route>\r\n                <Route exact path=\"/kurikulum_subjek\">\r\n                  <KurikulumSubjek />\r\n                </Route>\r\n                <Route exact path=\"/ruang\">\r\n                  <Ruang />\r\n                </Route>\r\n                <Route exact path=\"/ruang_timetable\">\r\n                  <RuangTimetable />\r\n                </Route>\r\n              </Switch>\r\n            }\r\n            {\r\n              Object.is(profession, \"Teacher\") &&\r\n              <Switch>\r\n                <Route exact path=\"/timetable\">\r\n                  <StudentTimeTable userInfo={authUser} />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                  <Profile profession={profession} loginName={loginName} />\r\n                </Route>\r\n                <Route exact path=\"/subjek\">\r\n                  <Subjek />\r\n                </Route>\r\n                <Route exact path=\"/pelajar_subjek\">\r\n                  <PelajarSubjek />\r\n                </Route>\r\n                <Route exact path=\"/pensyarah_subjek\">\r\n                  <PensyarahSubjek />\r\n                </Route>\r\n                <Route exact path=\"/subjek_seksyen\">\r\n                  <SubjekSeksyen />\r\n                </Route>\r\n                <Route exact path=\"/subjek_pensyarah\">\r\n                  <SubjekPensyarah />\r\n                </Route>\r\n                <Route exact path=\"/subjek_pelajar\">\r\n                  <SubjekPelajar />\r\n                </Route>\r\n                <Route exact path=\"/kurikulum\">\r\n                  <Kurikulum />\r\n                </Route>\r\n                <Route exact path=\"/kurikulum_elektif\">\r\n                  <KurikulumElektif />\r\n                </Route>\r\n                <Route exact path=\"/kurikulum_subjek\">\r\n                  <KurikulumSubjek />\r\n                </Route>\r\n                <Route exact path=\"/ruang\">\r\n                  <Ruang />\r\n                </Route>\r\n                <Route exact path=\"/ruang_timetable\">\r\n                  <RuangTimetable />\r\n                </Route>\r\n\r\n              </Switch>\r\n            }\r\n            {/* <Route component={NotFound} /> */}\r\n\r\n            {/* </Switch> */}\r\n          </DrawerObject>\r\n        </>\r\n      }\r\n\r\n    </ThemeProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport sesiSemester from '../components/TableDataSlice';\nimport authUser from '../pages/SignInUpSlice'; \nimport sessionId from \"../pages/SessionIdSlice\";\n\nexport default configureStore({\n    reducer: {\n      sesiSemester,\n      authUser,\n      sessionId\n    },\n  });\n  ","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <Provider store={store}><BrowserRouter> <App /> </BrowserRouter> </Provider>, document.getElementById('root'));\r\n\r\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/UTM_Gate.45f3797a.jpg\";"],"sourceRoot":""}